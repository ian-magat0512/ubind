[*.cs]

root = true

# Default severity for analyzer diagnostics with category 'StyleCop.CSharp.DocumentationRules'
dotnet_analyzer_diagnostic.category-StyleCop.CSharp.DocumentationRules.severity = silent
csharp_indent_labels = no_change
csharp_using_directive_placement = inside_namespace:error
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
dotnet_diagnostic.SA0001.severity = silent
dotnet_diagnostic.SA1600.severity = silent
dotnet_diagnostic.SA1601.severity = silent
dotnet_diagnostic.SA1602.severity = silent
dotnet_diagnostic.SA1611.severity = silent
dotnet_diagnostic.SA1612.severity = silent
dotnet_diagnostic.SA1615.severity = silent
dotnet_diagnostic.SA1618.severity = silent
dotnet_diagnostic.SA1642.severity = silent
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent
csharp_style_var_elsewhere = false:silent
dotnet_diagnostic.SA1028.severity = error
dotnet_diagnostic.SA1636.severity = silent

# CS0219: Variable is assigned but its value is never used
dotnet_diagnostic.CS0219.severity = silent

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = error

# SA1508: Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1508.severity = error

# SA1507: Code should not contain multiple blank lines in a row
dotnet_diagnostic.SA1507.severity = error

# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = error

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = error

# CS1573: Parameter has no matching param tag in the XML comment (but other parameters do)
dotnet_diagnostic.CS1573.severity = silent

# CS0618: Type or member is obsolete
dotnet_diagnostic.CS0618.severity = warning

# CS8073: The result of the expression is always the same since a value of this type is never equal to 'null'
dotnet_diagnostic.CS8073.severity = error

# IDE0022: Use block body for methods
dotnet_diagnostic.IDE0022.severity = silent

# CS8597: Thrown value may be null.
dotnet_diagnostic.CS8597.severity = silent

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = silent

# CS1572: XML comment has a param tag, but there is no parameter by that name
dotnet_diagnostic.CS1572.severity = error

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = silent

# SA1119: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119.severity = error

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = silent

# SA1118: Parameter should not span multiple lines
dotnet_diagnostic.SA1118.severity = silent

# SA1011: Closing square brackets should be spaced correctly
dotnet_diagnostic.SA1011.severity = silent

# SA0002 "Invalid Settings File"
# This diagnostic is reported when a settings file (such as stylecop.json) is placed in a directory which is not one of the directories allowed by StyleCop.
dotnet_diagnostic.SA0002.severity = warning

# SA1516: Elements must be separated by blank line
# This rule enforces that a blank line must follow the closing brace of a C# element, statement, or accessor.
# This helps to improve the readability of the code.
dotnet_diagnostic.SA1516.severity = warning

# SA1135: Using directives should be qualified
dotnet_diagnostic.SA1135.severity = silent

# SA1300: Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = error

# SA1515: Single-line comment must be preceded by blank line
dotnet_diagnostic.SA1515.severity = error

# SA1513: Closing Brace Must BeFollowed By Blank Line
dotnet_diagnostic.SA1513.severity = error

# SA1512: A single-line comment code is followed by a blank line.
dotnet_diagnostic.SA1512.severity = error

# SA1137: Elements should have the same indentation
dotnet_diagnostic.SA1137.severity = silent

# xUnit2000: Constants and literals should be the expected argument
dotnet_diagnostic.xUnit2000.severity = silent

# xUnit1013: Public method should be marked as test
dotnet_diagnostic.xUnit1013.severity = silent
dotnet_diagnostic.SA1638.severity = error
dotnet_diagnostic.SA1633.severity = error

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = silent

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = warning
# IDE0060 Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning
dotnet_diagnostic.SA1000.severity = error

# SA1513: A closing brace within a C# element, statement, or expression is not followed by a blank line.
dotnet_diagnostic.SA1513.severity = silent
csharp_style_prefer_primary_constructors = true:suggestion

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_readonly_field = true:silent
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_code_quality_unused_parameters = all:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
dotnet_diagnostic.CA2200.severity = error
dotnet_diagnostic.CA1823.severity = error
# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = warning


# IDE0005: Using directive is unnecessary
dotnet_diagnostic.IDE0005.severity = error

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = silent

# Default severity for analyzer diagnostics with category 'StyleCop.CSharp.OrderingRules'
dotnet_analyzer_diagnostic.category-StyleCop.CSharp.OrderingRules.severity = error

# Default severity for analyzer diagnostics with category 'Style'
dotnet_analyzer_diagnostic.category-Style.severity = silent

# IDE0003: Remove qualification
dotnet_diagnostic.IDE0003.severity = silent

# Default severity for analyzer diagnostics with category 'Performance'
dotnet_analyzer_diagnostic.category-Performance.severity = error

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = silent

# Default severity for analyzer diagnostics with category 'CodeQuality'
dotnet_analyzer_diagnostic.category-CodeQuality.severity = error
dotnet_diagnostic.CA1822.severity = silent

# Default severity for analyzer diagnostics with category 'Interoperability'
dotnet_analyzer_diagnostic.category-Interoperability.severity = silent

# Default severity for analyzer diagnostics with category 'StyleCop.CSharp.MaintainabilityRules'
dotnet_analyzer_diagnostic.category-StyleCop.CSharp.MaintainabilityRules.severity = silent

# SA0001: XML comment analysis disabled
dotnet_diagnostic.SA0001.severity = silent
dotnet_diagnostic.CA1806.severity = silent


# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = silent

# CS4014: Because this call is not awaited, execution of the current method continues before the call is completed
dotnet_diagnostic.CS4014.severity = error

# CS1998: This async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = error

# CA1801: Review unused parameters. This rule detects when a declared and assigned parameter, field, or variable is never used.
dotnet_diagnostic.CA1801.severity = warning

#############################################################################################
# The following are nullability rules. By default all nullability rules are set to warning:
# https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/nullable-warnings
# However, since we have recently upgraded to .NET 6 and didn't have these on previously, our code
# needs to be changed to ensure these warnings don't happen. We have around 8000 warnings, so
# for now we are disabling them and will re-enable them as we fix the code for them, one by one.
# To fix, please set the severity to "error" then fix all of them.
###############################################################################################

# CS8603: Possible null reference return. (392 instances at time of writing)
dotnet_diagnostic.CS8603.severity = error

# CS8600: Converting null literal or possible null value to non-nullable type. (580 instances at time of writing)
dotnet_diagnostic.CS8600.severity = error

# CS8625: Cannot convert null literal to non-nullable reference type. (1217 instances at time of writing)
dotnet_diagnostic.CS8625.severity = error

# CS8629: Nullable value type may be null. (202 instances at time of writing)
dotnet_diagnostic.CS8629.severity = error

# CS8618: Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
dotnet_diagnostic.CS8618.severity = error

# CS8605: Unboxing a possibly null value.
dotnet_diagnostic.CS8605.severity = error

# CS8604: Possible null reference argument.
dotnet_diagnostic.CS8604.severity = error

# CS8601: Possible null reference assignment.
dotnet_diagnostic.CS8601.severity = error

# CS8602: Dereference of a possibly null reference.
dotnet_diagnostic.CS8602.severity = error

# CS8622: Nullability of reference types in type of parameter doesn't match the target delegate (possibly because of nullability attributes).
dotnet_diagnostic.CS8622.severity = error

# CS8619: Nullability of reference types in value doesn't match target type.
dotnet_diagnostic.CS8619.severity = error

# CS8767: Nullability of reference types in type of parameter doesn't match implicitly implemented member (possibly because of nullability attributes).
dotnet_diagnostic.CS8767.severity = error

# CS8620: Argument cannot be used for parameter due to differences in the nullability of reference types.
dotnet_diagnostic.CS8620.severity = error

# CS8765: Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes).
dotnet_diagnostic.CS8765.severity = error
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
