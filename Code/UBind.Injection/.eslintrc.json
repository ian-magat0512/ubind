{
    "root": true,
    "ignorePatterns": [],
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "env": {
                "browser": true,
                "es6": true,
                "node": true,
                "jest": true
            },
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "project": "tsconfig.json",
                "sourceType": "module"
            },
            "extends": [
                "eslint:recommended"
                /* Add these later:
                "plugin:@typescript-eslint/eslint-recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/recommended-requiring-type-checking"
                */
            ],
            "plugins": [
                "eslint-plugin-import",
                "eslint-plugin-prefer-arrow",
                "eslint-plugin-jsdoc",
                "@typescript-eslint"
            ],
            "rules": {
                "@typescript-eslint/adjacent-overload-signatures": "error",
                "@typescript-eslint/array-type": [
                    "error",
                    {
                        "default": "generic"
                    }
                ],
                "@typescript-eslint/ban-types": "error",
                "@typescript-eslint/consistent-type-assertions": "off",
                "@typescript-eslint/consistent-type-definitions": "error",
                "@typescript-eslint/dot-notation": "off",
                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "accessibility": "explicit"
                    }
                ],
                "@typescript-eslint/indent": ["error", 4],
                "@typescript-eslint/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "semi",
                            "requireLast": true
                        },
                        "singleline": {
                            "delimiter": "semi",
                            "requireLast": false
                        }
                    }
                ],
                "@typescript-eslint/member-ordering": "off",
                "@typescript-eslint/naming-convention": [
                    "error",
                    { "selector": [ "default" ], "format": ["camelCase"], "leadingUnderscore": "allow" },
                    { "selector": [ "property" ], "modifiers": [ "readonly" ], "format": [ "PascalCase" ] },
                    { "selector": [ "class" ], "format": [ "PascalCase" ] },
                    { "selector": [ "interface" ], "format": [ "PascalCase" ] },
                    { "selector": [ "enum" ], "format": [ "PascalCase" ] },
                    { "selector": [ "typeLike" ], "format": [ "PascalCase" ] },
                    { "selector": [ "enumMember" ], "format": [ "PascalCase" ] },
                    { "selector": [ "objectLiteralProperty" ], "format": [ "PascalCase", "camelCase" ] }
                ],
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/no-empty-interface": "off",
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-non-null-assertion": "off",
                "@typescript-eslint/no-unused-expressions": "error",
                "@typescript-eslint/no-var-requires": "error",
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-function-type": "off",
                "@typescript-eslint/quotes": "off",
                "@typescript-eslint/semi": [
                    "error",
                    "always"
                ],
                "@typescript-eslint/typedef": [ 
                    "error",
                    {
                        "arrayDestructuring": true,
                        "arrowParameter": true,
                        "memberVariableDeclaration": true,
                        "objectDestructuring": true,
                        "parameter": true,
                        "propertyDeclaration": true,
                        "variableDeclaration": true,
                        "variableDeclarationIgnoreFunction": true
                    }
                ],
                "@typescript-eslint/type-annotation-spacing": "error",
                "@typescript-eslint/unified-signatures": "error",
                "arrow-body-style": ["off"],
                "arrow-parens": [
                    "error",
                    "always"
                ],
                "brace-style": [
                    "error",
                    "1tbs"
                ],
                "comma-dangle": ["error", "always-multiline"],
                "constructor-super": "error",
                "curly": [
                    "error",
                    "multi-line"
                ],
                "dot-notation": "off",
                "eol-last": "error",
                "eqeqeq": [
                    "off",
                    "always"
                ],
                "id-denylist": "off",
                "id-match": "off",
                "import/no-deprecated": "warn",
                "import/order": "off",
                "indent": ["error", 4, { "SwitchCase": 1 }],
                "jsdoc/check-alignment": "error",
                "jsdoc/check-indentation": "off",
                "jsdoc/newline-after-description": "off",
                "jsdoc/require-jsdoc": [ 
                    "error",
                    {
                        "require": {
                            "FunctionDeclaration": false,
                            "MethodDefinition": false,
                            "ClassDeclaration": true,
                            "ClassExpression": true,
                            "ArrowFunctionExpression": false,
                            "FunctionExpression": false
                        }
                    }
                ],
                "max-classes-per-file": ["error", 2],
                "max-len": [
                    "error",
                    {
                        "ignoreStrings": false,
                        "code": 120
                    }
                ],
                "no-var": "error",
                "no-bitwise": "error",
                "no-caller": "error",
                "no-cond-assign": "error",
                "no-console": [
                    "error",
                    {
                        "allow": [
                            "log",
                            "warn",
                            "dir",
                            "timeLog",
                            "assert",
                            "clear",
                            "count",
                            "countReset",
                            "group",
                            "groupEnd",
                            "table",
                            "dirxml",
                            "error",
                            "groupCollapsed",
                            "Console",
                            "profile",
                            "profileEnd",
                            "timeStamp",
                            "context"
                        ]
                    }
                ],
                "no-debugger": "error",
                "no-empty": "off",
                "no-empty-function": "off",
                "no-eval": "error",
                "no-fallthrough": "error",
                "no-irregular-whitespace": [
                    "error",
                    {
                        "skipRegExps": true
                    }
                ],
                "no-multiple-empty-lines": "error",
                "no-new-wrappers": "error",
                "no-restricted-imports": [
                    "error",
                    "rxjs/Rx"
                ],
                "no-throw-literal": "error",
                "no-trailing-spaces": [
                    "error",
                    {
                        "ignoreComments": true
                    }
                ],
                "no-undef-init": "error",
                "no-underscore-dangle": "off",
                "no-unused-vars": ["error", { "args": "none"} ],
                "no-unused-expressions": "error",
                "no-unused-labels": "error",
                "no-useless-escape": "off",
                "object-curly-spacing": [ "error", "always" ],
                "object-shorthand": "off",
                "one-var": [
                    "error",
                    "never"
                ],
                "prefer-arrow/prefer-arrow-functions": "error",
                "quote-props": "off",
                "quotes": "off",
                "radix": "error",
                "semi": "error",
                "space-before-function-paren": [
                    "error",
                    {
                        "anonymous": "never",
                        "named": "never",
                        "asyncArrow": "always"
                    }
                ],
                "spaced-comment": [
                    "error",
                    "always",
                    {
                        "markers": [
                            "/"
                        ],
                        "block": {
                            "exceptions": ["*"]
                        }
                    }
                ],
                "use-isnan": "error"
            }
        }
    ]
}
