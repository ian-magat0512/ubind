// <auto-generated />
#pragma warning disable 1591
namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class Addedcombinedportalandpaymentchanges : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.CustomerDetails",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Name = c.String(),
                        PhoneNumber = c.String(),
                        Email = c.String(),
                        MobileNumber = c.String(),
                        CreationTimeInTicksSinceEpoch = c.Long(nullable: false),
                        Application_Id = c.Guid(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Applications", t => t.Application_Id)
                .Index(t => t.Application_Id);
            
            CreateTable(
                "dbo.FundingAcceptanceResults",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        ProposalId = c.String(),
                        Outcome = c.Int(nullable: false),
                        CreationTimeInTicksSinceEpoch = c.Long(nullable: false),
                        Application_Id = c.Guid(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Applications", t => t.Application_Id)
                .Index(t => t.Application_Id);
            
            CreateTable(
                "dbo.FundingProposalResults",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        ProposalId = c.String(),
                        AcceptanceUrl = c.String(),
                        Outcome = c.Int(nullable: false),
                        SubmittedFormUpdateId = c.Guid(nullable: false),
                        SubmittedCalculationResultId = c.Guid(nullable: false),
                        CreationTimeInTicksSinceEpoch = c.Long(nullable: false),
                        Application_Id = c.Guid(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Applications", t => t.Application_Id)
                .Index(t => t.Application_Id);
            
            CreateTable(
                "dbo.Ownerships",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        OwnerId = c.Guid(nullable: false),
                        ApplicationId = c.Guid(nullable: false),
                        CreationTimeInTicksSinceEpoch = c.Long(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Applications", t => t.ApplicationId, cascadeDelete: true)
                .Index(t => t.ApplicationId);
            
            CreateTable(
                "dbo.PaymentAttemptResults",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Reference = c.String(),
                        Outcome = c.Int(nullable: false),
                        SubmittedFormUpdateId = c.Guid(nullable: false),
                        SubmittedCalculationResultId = c.Guid(nullable: false),
                        CreationTimeInTicksSinceEpoch = c.Long(nullable: false),
                        Application_Id = c.Guid(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Applications", t => t.Application_Id)
                .Index(t => t.Application_Id);
            
            CreateTable(
                "dbo.Users",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Email = c.String(),
                        FirstName = c.String(),
                        LastName = c.String(),
                        FullName = c.String(),
                        PhoneNumber = c.String(),
                        Picture = c.String(),
                        UserID = c.String(),
                        Role = c.String(),
                        Location = c.String(),
                        Blocked = c.Boolean(nullable: false),
                        CreationTimeInTicksSinceEpoch = c.Long(nullable: false),
                    })
                .PrimaryKey(t => t.Id);
            
            AddColumn("dbo.ReleaseDetails", "PaymentJson", c => c.String());
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.PaymentAttemptResults", "Application_Id", "dbo.Applications");
            DropForeignKey("dbo.Ownerships", "ApplicationId", "dbo.Applications");
            DropForeignKey("dbo.FundingProposalResults", "Application_Id", "dbo.Applications");
            DropForeignKey("dbo.FundingAcceptanceResults", "Application_Id", "dbo.Applications");
            DropForeignKey("dbo.CustomerDetails", "Application_Id", "dbo.Applications");
            DropIndex("dbo.PaymentAttemptResults", new[] { "Application_Id" });
            DropIndex("dbo.Ownerships", new[] { "ApplicationId" });
            DropIndex("dbo.FundingProposalResults", new[] { "Application_Id" });
            DropIndex("dbo.FundingAcceptanceResults", new[] { "Application_Id" });
            DropIndex("dbo.CustomerDetails", new[] { "Application_Id" });
            DropColumn("dbo.ReleaseDetails", "PaymentJson");
            DropTable("dbo.Users");
            DropTable("dbo.PaymentAttemptResults");
            DropTable("dbo.Ownerships");
            DropTable("dbo.FundingProposalResults");
            DropTable("dbo.FundingAcceptanceResults");
            DropTable("dbo.CustomerDetails");
        }
    }
}
