// <auto-generated />
#pragma warning disable 1591
namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    /// <summary>
    /// In this change, we are moving the Environment attribute from the Report entity, into the ReportFile entity.
    /// This is because a report definition is not environment related. If you create a report, it should apply across
    /// all environments. It's only the data in a generated report that's environment specific.
    /// The "ReportFile" represents a generated report with actual data. Therefore we will be moving the Environment
    /// property to that object. This way, when we go into the portal and switch environments, all report definitions will
    /// stay the same, but the report history will change as it will only show generated reports for the environment 
    /// you are in.
    /// </summary>
    public partial class MoveEnvironmentFromReportToReportFile : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.ReportFiles", "Environment", c => c.Int(nullable: false, defaultValue: 3));
            // select the environment from the read model and apply it to ReportFiles with the same id
            Sql("UPDATE dbo.ReportFiles SET Environment = "
                + "(SELECT Environment FROM dbo.ReportReadModels "
                + " WHERE dbo.ReportFiles.ReportId = dbo.ReportReadModels.ReportId)");
            DropColumn("dbo.ReportReadModels", "Environment");
        }

        public override void Down()
        {
            AddColumn("dbo.ReportReadModels", "Environment", c => c.Int(nullable: false));
            //DropColumn("dbo.ReportFiles", "Environment");
            DropColumn("dbo.ReportFiles", "MimeType");
        }
    }
}
