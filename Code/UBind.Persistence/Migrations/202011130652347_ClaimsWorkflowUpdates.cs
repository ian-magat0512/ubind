// <auto-generated />
#pragma warning disable 1591
namespace UBind.Persistence.Migrations
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity.Migrations;
    using UBind.Domain;

    public partial class ClaimsWorkflowUpdates : DbMigration
    {
        public override void Up()
        {
            RenameTable(name: "dbo.FileAttachments", newName: "ApplicationFileAttachments");
            RenameTable(name: "dbo.QuoteNumberSequences", newName: "ReferenceNumberSequences");
            //RenameColumn(table: "dbo.ReleaseEvents", name: "Details_Id", newName: "ClaimDetails_Id");
            //RenameIndex(table: "dbo.ReleaseEvents", name: "IX_Details_Id", newName: "IX_ClaimDetails_Id");
            RenameColumn(table: "dbo.ReleaseEvents", name: "Details_Id", newName: "QuoteDetails_Id");
            RenameIndex(table: "dbo.ReleaseEvents", name: "IX_Details_Id", newName: "IX_QuoteDetails_Id");
            CreateTable(
                "dbo.ClaimFileAttachments",
                c => new
                {
                    Id = c.Guid(nullable: false),
                    Name = c.String(),
                    Type = c.String(),
                    FileSize = c.Long(nullable: false),
                    FileContentId = c.Guid(nullable: false),
                    ClaimId = c.Guid(),
                    OwnerType = c.Int(),
                    ClaimOrClaimVersionId = c.Guid(),
                    CreationTimeInTicksSinceEpoch = c.Long(),
                    Discriminator = c.String(nullable: false, maxLength: 128),
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.ClaimVersionReadModels",
                c => new
                {
                    Id = c.String(nullable: false, maxLength: 128),
                    ClaimVersionId = c.Guid(nullable: false),
                    AggregateId = c.Guid(nullable: false),
                    ClaimId = c.Guid(nullable: false),
                    ClaimVersionNumber = c.Int(nullable: false),
                    LatestFormData = c.String(),
                    ClaimReferenceNumber = c.String(),
                    SerializedCalculationResult = c.String(),
                    LastUpdatedTicksSinceEpoch = c.Long(nullable: false),
                    CreationTimeTicksSinceEpoch = c.Long(nullable: false),
                })
                .PrimaryKey(t => t.Id);

            AddColumn("dbo.ClaimReadModels", "SerializedLatestCalcuationResult", c => c.String());
            //AddColumn("dbo.ClaimReadModels", "ClaimNumber", c => c.String());
            RenameColumn(table: "dbo.ClaimReadModels", name: "ReferenceNumber", newName: "ClaimNumber");
            AddColumn("dbo.ClaimReadModels", "ClaimReference", c => c.String());
            AddColumn("dbo.ClaimReadModels", "LastUpdatedTicksSinceEpoch", c => c.Long(nullable: false));
            AddColumn("dbo.ClaimReadModels", "WorkflowStep", c => c.String());
            //AddColumn("dbo.ReleaseEvents", "QuoteDetails_Id", c => c.Guid());
            AddColumn("dbo.ReleaseEvents", "ClaimDetails_Id", c => c.Guid());
            AddColumn("dbo.ReleaseDetails", "AppType", c => c.Int(nullable: false));
            AlterColumn("dbo.ClaimReadModels", "Amount", c => c.Decimal(precision: 18, scale: 2));
            AlterColumn("dbo.ClaimReadModels", "Status", c => c.String());
            AlterColumn("dbo.ClaimReadModels", "IncidentDateAsDateTime", c => c.DateTime());
            //CreateIndex("dbo.ReleaseEvents", "QuoteDetails_Id");
            //AddForeignKey("dbo.ReleaseEvents", "QuoteDetails_Id", "dbo.ReleaseDetails", "Id");
            CreateIndex("dbo.ReleaseEvents", "ClaimDetails_Id");
            AddForeignKey("dbo.ReleaseEvents", "ClaimDetails_Id", "dbo.ReleaseDetails", "Id");
            //DropColumn("dbo.ClaimReadModels", "ReferenceNumber"); ----ReferenceNumber renamed to claim number above instead.
            DropColumn("dbo.ClaimReadModels", "LatestCalculationResultJson");

            this.MapStatusesToStates();
        }

        public override void Down()
        {
            AddColumn("dbo.ClaimReadModels", "LatestCalculationResultJson", c => c.String());
            //AddColumn("dbo.ClaimReadModels", "ReferenceNumber", c => c.String());
            //DropForeignKey("dbo.ReleaseEvents", "QuoteDetails_Id", "dbo.ReleaseDetails");
            //DropIndex("dbo.ReleaseEvents", new[] { "QuoteDetails_Id" });
            DropForeignKey("dbo.ReleaseEvents", "ClaimDetails_Id", "dbo.ReleaseDetails");
            DropIndex("dbo.ReleaseEvents", new[] { "ClaimDetails_Id" });
            AlterColumn("dbo.ClaimReadModels", "IncidentDateAsDateTime", c => c.DateTime(nullable: false, precision: 7, storeType: "datetime2"));
            AlterColumn("dbo.ClaimReadModels", "Status", c => c.Int(nullable: false));
            AlterColumn("dbo.ClaimReadModels", "Amount", c => c.Decimal(nullable: false, precision: 18, scale: 2));
            DropColumn("dbo.ReleaseDetails", "AppType");
            //DropColumn("dbo.ReleaseEvents", "QuoteDetails_Id");
            DropColumn("dbo.ReleaseEvents", "ClaimDetails_Id");
            DropColumn("dbo.ClaimReadModels", "WorkflowStep");
            DropColumn("dbo.ClaimReadModels", "LastUpdatedTicksSinceEpoch");
            DropColumn("dbo.ClaimReadModels", "ClaimReference");
            //DropColumn("dbo.ClaimReadModels", "ClaimNumber");
            RenameColumn(table: "dbo.ClaimReadModels", name: "ClaimNumber", newName: "ReferenceNumber");
            DropColumn("dbo.ClaimReadModels", "SerializedLatestCalcuationResult");
            DropTable("dbo.ClaimVersionReadModels");
            DropTable("dbo.ClaimFileAttachments");
            //RenameIndex(table: "dbo.ReleaseEvents", name: "IX_ClaimDetails_Id", newName: "IX_Details_Id");
            //RenameColumn(table: "dbo.ReleaseEvents", name: "ClaimDetails_Id", newName: "Details_Id");
            RenameColumn(table: "dbo.ReleaseEvents", name: "QuoteDetails_Id", newName: "Details_Id");
            RenameIndex(table: "dbo.ReleaseEvents", name: "IX_QuoteDetails_Id", newName: "IX_Details_Id");
            RenameTable(name: "dbo.ReferenceNumberSequences", newName: "QuoteNumberSequences");
            RenameTable(name: "dbo.ApplicationFileAttachments", newName: "FileAttachments");
        }

        private void MapStatusesToStates()
        {
            // Only implemented for statuses that are actually used.
            var mappedStatuses = new List<LegacyClaimStatus> { LegacyClaimStatus.New, LegacyClaimStatus.Cancelled, LegacyClaimStatus.Accepted, LegacyClaimStatus.Processing, LegacyClaimStatus.Rejected };
            foreach (var status in mappedStatuses)
            {
                var statusValue = (int)status;
                var command = $@"UPDATE dbo.ClaimReadModels SET Status = '{ClaimState.FromClaimStatus(status)}' WHERE Status = '{statusValue}';";
                this.Sql(command);
            }
        }
    }
}
