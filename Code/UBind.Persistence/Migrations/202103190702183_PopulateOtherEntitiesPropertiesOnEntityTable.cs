// <auto-generated />
#pragma warning disable 1591
namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class PopulateOtherEntitiesPropertiesOnEntityTable : DbMigration
    {
        public override void Up()
        {
            var populateQuoteVersionScript = @"UPDATE QV
                            SET 
                                QV.Environment = Q.Environment, 
                                QV.Type = Q.Type,
                                QV.TenantId = Q.TenantId,
                                QV.ProductId = Q.ProductId,
                                QV.OrganisationId = Q.OrganisationId
                            FROM dbo.QuoteVersionReadModels QV
							INNER JOIN dbo.Quotes Q ON Q.Id = QV.QuoteId";

            var populatePolicyScript = @"UPDATE P
                            SET 
                                P.OrganisationId = O.DefaultOrganisationId
                            FROM  dbo.PolicyReadModels P
                            OUTER APPLY 
							(  
								SELECT TOP 1 * from [dbo].[TenantDetails]
								WHERE Tenant_Id = P.TenantId
								ORDER BY CreationTimeInTicksSinceEpoch DESC
							) O";

            var populatePolicyTransactionScript = @"UPDATE PT
                            SET 
                                PT.Environment = P.Environment, 
                                PT.CustomerId = P.CustomerId, 
                                PT.OwnerUserId = P.OwnerUserId, 
                                PT.TenantId = P.TenantId,
                                PT.ProductId = P.ProductId,
                                PT.OrganisationId = P.OrganisationId,
                                PT.IsTestData = P.IsTestData
                            FROM dbo.PolicyTransactions PT
                            INNER JOIN dbo.PolicyReadModels P ON PT.PolicyId = P.Id";

            var populateClaimScript = @"UPDATE C
                            SET 
                                C.OrganisationId = P.OrganisationId,
								C.IsTestData = P.IsTestData,
                                C.OwnerUserId = P.OwnerUserId
                            FROM dbo.ClaimReadModels C
                            INNER JOIN dbo.PolicyReadModels P ON C.QuoteId = P.Id";

            var populateCustomerScript = @"UPDATE C
                            SET 
                                C.OrganisationId = T.DefaultOrganisationId
                            FROM dbo.CustomerReadModels C
							OUTER APPLY 
							(  
								SELECT TOP 1 * from [dbo].[TenantDetails]
								WHERE Tenant_Id = C.TenantId
								ORDER BY CreationTimeInTicksSinceEpoch DESC
							) T";

            var populateUserScript = @"UPDATE U
                            SET 
                                U.OrganisationId = T.DefaultOrganisationId
                            FROM dbo.UserReadModels U
							OUTER APPLY 
							(  
								SELECT TOP 1 * from [dbo].[TenantDetails]
								WHERE Tenant_Id = U.TenantId
								ORDER BY CreationTimeInTicksSinceEpoch DESC
							) T";

            var populateOldEmailRecordsWithTenant = @"UPDATE E
                            SET
                                E.TenantId = Q.TenantId,
                                E.ProductId = Q.ProductId
                            FROM [dbo].[Emails] E
                            INNER JOIN [dbo].[Quotes] Q ON Q.Id = E.QuoteId
                            WHERE E.TenantId IS NULL";

            var populateEmailScript = @"UPDATE E
                            SET 
                                E.OrganisationId = T.DefaultOrganisationId
                            FROM dbo.Emails E
							OUTER APPLY 
							(  
								SELECT TOP 1 * from [dbo].[TenantDetails]
								WHERE Tenant_Id = E.TenantId
								ORDER BY CreationTimeInTicksSinceEpoch DESC
							) T
                            WHERE E.TenantId IS NOT NULL";

            var populateClaimVersionScript = @"UPDATE CV
                            SET 
                                CV.Environment = C.Environment, 
                                CV.TenantId = C.TenantId,
                                CV.ProductId = C.ProductId,
                                CV.OrganisationId = C.OrganisationId,
								CV.CustomerId = C.CustomerId, 
                                CV.OwnerUserId = C.OwnerUserId, 
								CV.IsTestData = C.IsTestData,
                                CV.PolicyId = C.QuoteId,
                                CV.ClaimNumber = C.ClaimNumber
                            FROM dbo.ClaimVersionReadModels CV
							INNER JOIN dbo.ClaimReadModels C ON C.Id = CV.ClaimId";

            var populateQuoteDocumentScript = @"UPDATE QD
                            SET 
                                QD.Environment = Q.Environment, 
                                QD.TenantId = Q.TenantId,
                                QD.OrganisationId = Q.OrganisationId,
                                QD.IsTestData = 0,
                                QD.CustomerId = Q.CustomerId
                            FROM dbo.QuoteDocumentReadModels QD
                            INNER JOIN dbo.Quotes Q ON Q.Id = QD.QuoteId";

            var populateClaimDocumentScript = @"UPDATE CD
                            SET 
                                CD.Environment = C.Environment, 
                                CD.TenantId = C.TenantId,
                                CD.OrganisationId = C.OrganisationId,
                                CD.IsTestData = C.IsTestData,
                                CD.CustomerId = C.CustomerId
                            FROM dbo.ClaimFileAttachments CD
                            INNER JOIN dbo.ClaimReadModels C ON C.Id = CD.ClaimId";

            Sql(populateQuoteVersionScript);
            Sql(populatePolicyScript);
            Sql(populatePolicyTransactionScript);
            Sql(populateClaimScript);
            Sql(populateCustomerScript);
            Sql(populateUserScript);
            Sql(populateOldEmailRecordsWithTenant);
            Sql(populateEmailScript);
            Sql(populateClaimVersionScript);
            Sql(populateQuoteDocumentScript);
            this.Sql(populateClaimDocumentScript);
        }
        
        public override void Down()
        {
        }
    }
}
