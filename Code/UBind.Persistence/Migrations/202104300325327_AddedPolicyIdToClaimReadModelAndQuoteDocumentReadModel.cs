// <auto-generated />
#pragma warning disable 1591

namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    using System.IO;

    public partial class AddedPolicyIdToClaimReadModelAndQuoteDocumentReadModel : DbMigration
    {
        public override void Up()
        {
            // This is a custom migration for zero downtime deployment specifically the DEPLOYMENT 1 section in
            // https://confluence.aptiture.com/display/UBIND/Entity+Framework+Migrations+with+Zero+Downtime+Deployments.
            // The DEPLOYMENT 2 migration will be implmented in https://jira.aptiture.com/browse/UB-5112.


            // add policyId columns to ClaimReadModels and QuoteDocumentReadModels table
            AddColumn("dbo.ClaimReadModels", "PolicyId", c => c.Guid());
            AddColumn("dbo.QuoteDocumentReadModels", "PolicyId", c => c.Guid());

            // change the quoteId column to allow null, so this can be updated with policy id after migration
            AlterColumn("dbo.ClaimReadModels", "QuoteId", c => c.Guid(nullable: true));
            AlterColumn("dbo.QuoteDocumentReadModels", "QuoteId", c => c.Guid(nullable: true));

            // copy existing quoteId into column id
            this.Sql("UPDATE dbo.ClaimReadModels SET PolicyId = QuoteId WHERE PolicyId IS NULL");
            this.Sql("UPDATE dbo.QuoteDocumentReadModels SET PolicyId = QuoteId WHERE PolicyId IS NULL");

            // trigger to set policyId with quoteId into policyId column in ClaimsReadModel
            var claimReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"202104231632150_CreateClaimReadModelsCopyPolicyIdIntoQuoteIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(claimReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile));

            // trigger to copy policyId into quoteId column in ClaimsReadModel
            var claimReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"202104231632150_CreateClaimReadModelsCopyQuoteIdIntoPolicyIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(claimReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile));

            // trigger to sync policyId and quoteId column in ClaimsReadModel when updating the policy or quote id
            var copyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"202104231632150_CreateClaimReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTrigger.sql");
            this.Sql(File.ReadAllText(copyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile));

            // trigger to copy quoteId into policyId column in QuoteDocumentReadModel
            var quoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"202104231632150_CreateQuoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(quoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile));

            // trigger to copy policyId into quoteId column in QuoteDocumentReadModel
            var quoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"202104231632150_CreateQuoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(quoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile));

            // trigger to sync policyId and quoteId column in QuoteDocumentReadModel when updating the policy or quote id
            var quoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"202104231632150_CreateQuoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTrigger.sql");
            this.Sql(File.ReadAllText(quoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile));
        }

        public override void Down()
        {
            DropColumn("dbo.ClaimReadModels", "PolicyId");
            DropColumn("dbo.QuoteDocumentReadModels", "PolicyId");
            AlterColumn("dbo.ClaimReadModels", "QuoteId", c => c.Guid(nullable: false));
            AlterColumn("dbo.QuoteDocumentReadModels", "QuoteId", c => c.Guid(nullable: false));
            this.Sql("DROP TRIGGER IF EXISTS dbo.ClaimReadModelsCopyPolicyIdIntoQuoteIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.ClaimReadModelsCopyQuoteIdIntoPolicyIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.ClaimReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdate");
            this.Sql("DROP TRIGGER IF EXISTS dbo.QuoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.QuoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.QuoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdate");
        }
    }
}
