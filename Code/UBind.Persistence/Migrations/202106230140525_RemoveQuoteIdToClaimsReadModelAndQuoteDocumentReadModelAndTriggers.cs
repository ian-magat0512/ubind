// <auto-generated />
#pragma warning disable 1591

namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    using System.IO;
    using UBind.Persistence.Migrations.Extensions;

    public partial class RemoveQuoteIdToClaimsReadModelAndQuoteDocumentReadModelAndTriggers : DbMigration
    {
        public override void Up()
        {
            // This is custom migration for DEPLOYMENT 2 stage for https://jira.aptiture.com/browse/UB-3881

            // Drop triggers
            this.Sql("DROP TRIGGER IF EXISTS dbo.ClaimReadModelsCopyPolicyIdIntoQuoteIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.ClaimReadModelsCopyQuoteIdIntoPolicyIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.ClaimReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdate");
            this.Sql("DROP TRIGGER IF EXISTS dbo.QuoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsert");
            this.Sql("DROP TRIGGER IF EXISTS dbo.QuoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsert");
            this.Sql(
                "DROP TRIGGER IF EXISTS dbo.QuoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdate");

            // remove QuoteId column from ClaimReadModels and QuoteDocumentReadModels table
            DropColumn("dbo.ClaimReadModels", "QuoteId");
            DropColumn("dbo.QuoteDocumentReadModels", "QuoteId");

            // set the PolicyId column to not allow null inputs
            AlterColumn("dbo.ClaimReadModels", "PolicyId", c => c.Guid(nullable: false));
            AlterColumn("dbo.QuoteDocumentReadModels", "PolicyId", c => c.Guid(nullable: false));
        }

        public override void Down()
        {
            // add the QuoteId column from ClaimReadModels and QuoteDocumentReadModels table
            this.AddColumnIfNotExists("dbo.ClaimReadModels", "QuoteId", c => c.Guid());
            this.AddColumnIfNotExists("dbo.QuoteDocumentReadModels", "QuoteId", c => c.Guid());

            // set the PolicyId column to allow null inputs
            AlterColumn("dbo.ClaimReadModels", "PolicyId", c => c.Guid(nullable: true));
            AlterColumn("dbo.QuoteDocumentReadModels", "PolicyId", c => c.Guid(nullable: true));

            // copy existing PolicyId into QuoteId column
            this.Sql("UPDATE dbo.ClaimReadModels SET QuoteId = PolicyId WHERE QuoteId IS NULL");
            this.Sql("UPDATE dbo.QuoteDocumentReadModels SET QuoteId = PolicyId WHERE QuoteId IS NULL");

            // trigger to set policyId with quoteId into policyId column in ClaimsReadModel
            var claimReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile = Path.Combine(
                AppDomain.CurrentDomain.BaseDirectory,
                "Migrations",
                @"202104231632150_CreateClaimReadModelsCopyPolicyIdIntoQuoteIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(claimReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile));

            // trigger to copy policyId into quoteId column in ClaimsReadModel
            var claimReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile = Path.Combine(
                AppDomain.CurrentDomain.BaseDirectory,
                "Migrations",
                @"202104231632150_CreateClaimReadModelsCopyQuoteIdIntoPolicyIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(claimReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile));

            // trigger to sync policyId and quoteId column in ClaimsReadModel when updating the policy or quote id
            var copyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile = Path.Combine(
                AppDomain.CurrentDomain.BaseDirectory,
                "Migrations",
                @"202104231632150_CreateClaimReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTrigger.sql");
            this.Sql(File.ReadAllText(copyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile));

            // trigger to copy quoteId into policyId column in QuoteDocumentReadModel
            var quoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile = Path.Combine(
                AppDomain.CurrentDomain.BaseDirectory,
                "Migrations",
                @"202104231632150_CreateQuoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(quoteDocumentReadModelsCopyPolicyIdIntoQuoteIdOnInsertTriggerSqlFile));

            // trigger to copy policyId into quoteId column in QuoteDocumentReadModel
            var quoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile = Path.Combine(
                AppDomain.CurrentDomain.BaseDirectory,
                "Migrations",
                @"202104231632150_CreateQuoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsertTrigger.sql");
            this.Sql(File.ReadAllText(quoteDocumentReadModelsCopyQuoteIdIntoPolicyIdOnInsertTriggerSqlFile));

            // trigger to sync policyId and quoteId column in QuoteDocumentReadModel when updating the policy or quote id
            var quoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile = Path.Combine(
                AppDomain.CurrentDomain.BaseDirectory,
                "Migrations",
                @"202104231632150_CreateQuoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTrigger.sql");
            this.Sql(File.ReadAllText(
                quoteDocumentReadModelsCopyQuoteIdToPolicyIdOrPolicyIdToQuoteIdOnUpdateTriggerSqlFile));
        }
    }
}
