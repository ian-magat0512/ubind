// <auto-generated />
#pragma warning disable 1591

namespace UBind.Persistence.Migrations
{
    using System.Data.Entity.Migrations;
    using UBind.Persistence.Migrations.Extensions;

    public partial class AddedPersonRepeatingFields : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.StreetAddressReadModels",
                c => new
                {
                    FieldId = c.Guid(nullable: false),
                    Address = c.String(),
                    Suburb = c.String(),
                    Postcode = c.String(),
                    State = c.String(),
                    Label = c.String(),
                    CustomLabel = c.String(),
                    SequenceNo = c.Int(nullable: false),
                    IsDefault = c.Boolean(nullable: false),
                    PersonReadModel_Id = c.Guid(),
                })
                .PrimaryKey(t => t.FieldId)
                .ForeignKey("dbo.PersonReadModels", t => t.PersonReadModel_Id)
                .Index(t => t.PersonReadModel_Id);

            CreateTable(
                "dbo.EmailAddressReadModels",
                c => new
                {
                    FieldId = c.Guid(nullable: false),
                    EmailAddress = c.String(),
                    Label = c.String(),
                    CustomLabel = c.String(),
                    SequenceNo = c.Int(nullable: false),
                    IsDefault = c.Boolean(nullable: false),
                    PersonReadModel_Id = c.Guid(),
                })
                .PrimaryKey(t => t.FieldId)
                .ForeignKey("dbo.PersonReadModels", t => t.PersonReadModel_Id)
                .Index(t => t.PersonReadModel_Id);

            CreateTable(
                "dbo.MessengerIdReadModels",
                c => new
                {
                    FieldId = c.Guid(nullable: false),
                    MessengerId = c.String(),
                    Label = c.String(),
                    CustomLabel = c.String(),
                    SequenceNo = c.Int(nullable: false),
                    IsDefault = c.Boolean(nullable: false),
                    PersonReadModel_Id = c.Guid(),
                })
                .PrimaryKey(t => t.FieldId)
                .ForeignKey("dbo.PersonReadModels", t => t.PersonReadModel_Id)
                .Index(t => t.PersonReadModel_Id);

            CreateTable(
                "dbo.PhoneNumberReadModels",
                c => new
                {
                    FieldId = c.Guid(nullable: false),
                    PhoneNumber = c.String(),
                    Label = c.String(),
                    CustomLabel = c.String(),
                    SequenceNo = c.Int(nullable: false),
                    IsDefault = c.Boolean(nullable: false),
                    PersonReadModel_Id = c.Guid(),
                })
                .PrimaryKey(t => t.FieldId)
                .ForeignKey("dbo.PersonReadModels", t => t.PersonReadModel_Id)
                .Index(t => t.PersonReadModel_Id);

            CreateTable(
                "dbo.SocialMediaIdReadModels",
                c => new
                {
                    FieldId = c.Guid(nullable: false),
                    SocialMediaId = c.String(),
                    Label = c.String(),
                    CustomLabel = c.String(),
                    SequenceNo = c.Int(nullable: false),
                    IsDefault = c.Boolean(nullable: false),
                    PersonReadModel_Id = c.Guid(),
                })
                .PrimaryKey(t => t.FieldId)
                .ForeignKey("dbo.PersonReadModels", t => t.PersonReadModel_Id)
                .Index(t => t.PersonReadModel_Id);

            CreateTable(
                "dbo.WebsiteAddressReadModels",
                c => new
                {
                    FieldId = c.Guid(nullable: false),
                    WebsiteAddress = c.String(),
                    Label = c.String(),
                    CustomLabel = c.String(),
                    SequenceNo = c.Int(nullable: false),
                    IsDefault = c.Boolean(nullable: false),
                    PersonReadModel_Id = c.Guid(),
                })
                .PrimaryKey(t => t.FieldId)
                .ForeignKey("dbo.PersonReadModels", t => t.PersonReadModel_Id)
                .Index(t => t.PersonReadModel_Id);

            this.AddColumnIfNotExists(
                "dbo.PersonReadModels", "LastModifiedInTicksSinceEpoch", c => c.Long(nullable: false));
        }

        public override void Down()
        {
            DropForeignKey("dbo.WebsiteAddressReadModels", "PersonReadModel_Id", "dbo.PersonReadModels");
            DropForeignKey("dbo.StreetAddressReadModels", "PersonReadModel_Id", "dbo.PersonReadModels");
            DropForeignKey("dbo.SocialMediaIdReadModels", "PersonReadModel_Id", "dbo.PersonReadModels");
            DropForeignKey("dbo.PhoneNumberReadModels", "PersonReadModel_Id", "dbo.PersonReadModels");
            DropForeignKey("dbo.MessengerIdReadModels", "PersonReadModel_Id", "dbo.PersonReadModels");
            DropForeignKey("dbo.EmailAddressReadModels", "PersonReadModel_Id", "dbo.PersonReadModels");
            DropIndex("dbo.WebsiteAddressReadModels", new[] { "PersonReadModel_Id" });
            DropIndex("dbo.SocialMediaIdReadModels", new[] { "PersonReadModel_Id" });
            DropIndex("dbo.PhoneNumberReadModels", new[] { "PersonReadModel_Id" });
            DropIndex("dbo.MessengerIdReadModels", new[] { "PersonReadModel_Id" });
            DropIndex("dbo.EmailAddressReadModels", new[] { "PersonReadModel_Id" });
            DropIndex("dbo.StreetAddressReadModels", new[] { "PersonReadModel_Id" });
            DropColumn("dbo.PersonReadModels", "LastModifiedInTicksSinceEpoch");
            DropTable("dbo.WebsiteAddressReadModels");
            DropTable("dbo.SocialMediaIdReadModels");
            DropTable("dbo.PhoneNumberReadModels");
            DropTable("dbo.MessengerIdReadModels");
            DropTable("dbo.EmailAddressReadModels");
            DropTable("dbo.StreetAddressReadModels");
        }
    }
}
