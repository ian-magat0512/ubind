// <auto-generated />
#pragma warning disable 1591

namespace UBind.Persistence.Migrations
{
    using System.Data.Entity.Migrations;
    using UBind.Persistence.Helpers;
    using UBind.Persistence.Migrations.Extensions;

    public partial class AddNewIdForTenantAndProductAndOtherEntities : DbMigration
    {
        public override void Up()
        {
            DropPrimaryKey("dbo.ReferenceNumberSequences");
            this.AddColumnIfNotExists("dbo.Applications", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ClaimNumbers", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ClaimNumbers", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ClaimReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ClaimReadModels", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ClaimVersionReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ClaimVersionReadModels", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.CreditNoteNumbers", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.CreditNoteNumbers", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.CustomerReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Deployments", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Deployments", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Releases", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Releases", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.DevReleases", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.DevReleases", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.EmailAddressBlockingEvents", "TenantNewId", c => c.Guid());
            this.AddColumnIfNotExists("dbo.Emails", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Emails", "ProductNewId", c => c.Guid());
            this.AddColumnIfNotExists("dbo.SystemEmailTemplates", "ProductNewId", c => c.Guid());
            this.AddColumnIfNotExists("dbo.SystemEmailTemplates", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.InvoiceNumbers", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.InvoiceNumbers", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.LoginAttemptResults", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.QuoteReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.QuoteReadModels", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.OrganisationReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PasswordResetRecords", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PersonReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PolicyReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PolicyReadModels", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PolicyNumbers", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PolicyNumbers", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PolicyTransactions", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.PolicyTransactions", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Tenants", "NewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.SettingDetails", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ProductFeatureSettings", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ProductFeatureSettings", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Products", "NewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Products", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ProductDetails", "Alias", c => c.String());
            this.AddColumnIfNotExists("dbo.ReportReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.QuoteDocumentReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Quotes", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Quotes", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.QuoteVersionReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.QuoteVersionReadModels", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ReferenceNumberSequences", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.ReferenceNumberSequences", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.Roles", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.UserReadModels", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.SystemAlerts", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.SystemAlerts", "ProductNewId", c => c.Guid());
            this.AddColumnIfNotExists("dbo.SystemEvents", "ProductNewId", c => c.Guid());
            this.AddColumnIfNotExists("dbo.SystemEvents", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.TokenSessions", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.UniqueIdentifiers", "TenantNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.UniqueIdentifiers", "ProductNewId", c => c.Guid(nullable: false));
            this.AddColumnIfNotExists("dbo.UserLoginEmails", "TenantNewId", c => c.Guid(nullable: false));
            AddPrimaryKey("dbo.ReferenceNumberSequences", new[] { "TenantId", "TenantNewId", "ProductId", "ProductNewId", "Environment", "Method", "Number", "UseCase" });

            var methodName = "ApplyNewIdToMultipleAggregates";
            Sql(StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(methodName));
        }

        public override void Down()
        {
            DropPrimaryKey("dbo.ReferenceNumberSequences");
            DropColumn("dbo.UserLoginEmails", "TenantNewId");
            DropColumn("dbo.UniqueIdentifiers", "ProductNewId");
            DropColumn("dbo.UniqueIdentifiers", "TenantNewId");
            DropColumn("dbo.TokenSessions", "TenantNewId");
            DropColumn("dbo.SystemEvents", "TenantNewId");
            DropColumn("dbo.SystemEvents", "ProductNewId");
            DropColumn("dbo.SystemAlerts", "ProductNewId");
            DropColumn("dbo.SystemAlerts", "TenantNewId");
            DropColumn("dbo.UserReadModels", "TenantNewId");
            DropColumn("dbo.Roles", "TenantNewId");
            DropColumn("dbo.ReferenceNumberSequences", "ProductNewId");
            DropColumn("dbo.ReferenceNumberSequences", "TenantNewId");
            DropColumn("dbo.QuoteVersionReadModels", "ProductNewId");
            DropColumn("dbo.QuoteVersionReadModels", "TenantNewId");
            DropColumn("dbo.Quotes", "ProductNewId");
            DropColumn("dbo.Quotes", "TenantNewId");
            DropColumn("dbo.QuoteDocumentReadModels", "TenantNewId");
            DropColumn("dbo.ReportReadModels", "TenantNewId");
            DropColumn("dbo.ProductDetails", "Alias");
            DropColumn("dbo.Products", "TenantNewId");
            DropColumn("dbo.Products", "NewId");
            DropColumn("dbo.ProductFeatureSettings", "ProductNewId");
            DropColumn("dbo.ProductFeatureSettings", "TenantNewId");
            DropColumn("dbo.SettingDetails", "TenantNewId");
            DropColumn("dbo.Tenants", "NewId");
            DropColumn("dbo.PolicyTransactions", "ProductNewId");
            DropColumn("dbo.PolicyTransactions", "TenantNewId");
            DropColumn("dbo.PolicyNumbers", "ProductNewId");
            DropColumn("dbo.PolicyNumbers", "TenantNewId");
            DropColumn("dbo.PolicyReadModels", "ProductNewId");
            DropColumn("dbo.PolicyReadModels", "TenantNewId");
            DropColumn("dbo.PersonReadModels", "TenantNewId");
            DropColumn("dbo.PasswordResetRecords", "TenantNewId");
            DropColumn("dbo.OrganisationReadModels", "TenantNewId");
            DropColumn("dbo.QuoteReadModels", "ProductNewId");
            DropColumn("dbo.QuoteReadModels", "TenantNewId");
            DropColumn("dbo.LoginAttemptResults", "TenantNewId");
            DropColumn("dbo.InvoiceNumbers", "ProductNewId");
            DropColumn("dbo.InvoiceNumbers", "TenantNewId");
            DropColumn("dbo.SystemEmailTemplates", "TenantNewId");
            DropColumn("dbo.SystemEmailTemplates", "ProductNewId");
            DropColumn("dbo.Emails", "ProductNewId");
            DropColumn("dbo.Emails", "TenantNewId");
            DropColumn("dbo.EmailAddressBlockingEvents", "TenantNewId");
            DropColumn("dbo.DevReleases", "ProductNewId");
            DropColumn("dbo.DevReleases", "TenantNewId");
            DropColumn("dbo.Releases", "ProductNewId");
            DropColumn("dbo.Releases", "TenantNewId");
            DropColumn("dbo.Deployments", "ProductNewId");
            DropColumn("dbo.Deployments", "TenantNewId");
            DropColumn("dbo.CustomerReadModels", "TenantNewId");
            DropColumn("dbo.CreditNoteNumbers", "ProductNewId");
            DropColumn("dbo.CreditNoteNumbers", "TenantNewId");
            DropColumn("dbo.ClaimVersionReadModels", "ProductNewId");
            DropColumn("dbo.ClaimVersionReadModels", "TenantNewId");
            DropColumn("dbo.ClaimReadModels", "ProductNewId");
            DropColumn("dbo.ClaimReadModels", "TenantNewId");
            DropColumn("dbo.ClaimNumbers", "ProductNewId");
            DropColumn("dbo.ClaimNumbers", "TenantNewId");
            DropColumn("dbo.Applications", "ProductNewId");
            AddPrimaryKey("dbo.ReferenceNumberSequences", new[] { "TenantId", "ProductId", "Environment", "Method", "Number", "UseCase" });
        }
    }
}
