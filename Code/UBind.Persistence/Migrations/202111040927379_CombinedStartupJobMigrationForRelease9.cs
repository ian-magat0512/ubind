// <auto-generated />
#pragma warning disable 1591

namespace UBind.Persistence.Migrations
{
    using System.Data.Entity.Migrations;
    using UBind.Persistence.Helpers;

    public partial class CombinedStartupJobMigrationForRelease9 : DbMigration
    {
        private readonly string revertCustomerMethodName
            = "RevertCustomerModifiedTimeAffectedByOrganisationMigration_20210927";
        private readonly string revertUserMethodName
            = "RevertUserModifiedTimeAffectedByOrganisationMigration_20210927";
        public string addMissingIdsToPersonReadModelMethodName = "AddMissingIdsToPersonReadModel_20210920";
        private string setTenantNewIdToClaimAttachmentMethodName = "SetTenantNewIdToClaimAttachments_20210922";
        private string setTenantNewIdToPortalMethodName = "SetTenantNewIdToPortals_20210922";
        private string populateFileContentsForQuoteAttachmentMethodName = "PopulateFileContentsForQuoteFileAttachments";

        public override void Up()
        {
            // Startup runner to revert customer modified time before the organisation migration (UB-6132)
            var revertModifiedTimeToExistingCustomersQuery
                = StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(this.revertCustomerMethodName, runManuallyIfInMultiNode: true);
            Sql(revertModifiedTimeToExistingCustomersQuery);

            // Startup runner to revert user modified time before the organisation migration (UB-6132)
            var revertModifiedTimeToExistingUsersQuery
                = StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(this.revertUserMethodName, runManuallyIfInMultiNode: true);
            Sql(revertModifiedTimeToExistingUsersQuery);

            // Startup runner to add missing userId, customerId, organisationId, tenantId to person (UB-6148)
            var addMissingIdsToPersonQuery = StartupJobRunnerQueryHelper
                .GenerateInsertQueryForStartupJobV1(addMissingIdsToPersonReadModelMethodName, runManuallyIfInMultiNode: true);
            Sql(addMissingIdsToPersonQuery);

            // Startup runner to apply tenant new id to claim attachments (UB-5524)
            var addTenantNewIdToClaimAttachmentQuery = StartupJobRunnerQueryHelper
                .GenerateInsertQueryForStartupJobV1(setTenantNewIdToClaimAttachmentMethodName, runManuallyIfInMultiNode: true);
            Sql(addTenantNewIdToClaimAttachmentQuery);

            // Startup runner to apply tenant new id to portals (UB-5524)
            var addTenantNewIdToPortalsQuery = StartupJobRunnerQueryHelper
                .GenerateInsertQueryForStartupJobV1(setTenantNewIdToPortalMethodName, runManuallyIfInMultiNode: true);
            Sql(addTenantNewIdToPortalsQuery);

            // Startup runner to populate file contents for quote attachments (UB-2979)
            var populateFileContentsFromQuoteAttachmentsQuery =
                StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(this.populateFileContentsForQuoteAttachmentMethodName, runManuallyIfInMultiNode: true);
            this.Sql(populateFileContentsFromQuoteAttachmentsQuery);

            // Startup runner to set default organistaion for portals (UB-6238)
            var setDefaultOrgIdOnPortalsQuery = StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(
                "SetDefaultOrganisationIdOnPortals_20211001",
                true,
                true);
            Sql(setDefaultOrgIdOnPortalsQuery);

            // Startup runner to populate feature settings for portals (UB-6238)
            var populateFeatureSettingsQuery = StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(
                "PopulateFeatureSettings",
                true,
                true);
            Sql(populateFeatureSettingsQuery);

            var deleteUnIssuedPoliciesQuery = StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(
                "DeleteUnIssuedPolicyRecords_20211027",
                false,
                true);
            Sql(deleteUnIssuedPoliciesQuery);

            var replaceEmptyGuidWithNullQuery = StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1(
                "ReplaceEmptyGuidWithNullValue_20211102",
                false,
                true);
            Sql(replaceEmptyGuidWithNullQuery);

        }

        public override void Down()
        {
            // Remove startup runner to revert customer modified time before the organisation migration
            var revertModifiedTimeToExistingCustomersDeleteQuery
                = StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob(this.revertCustomerMethodName);
            Sql(revertModifiedTimeToExistingCustomersDeleteQuery);

            // Remove startup runner to revert user modified time before the organisation migration
            var revertModifiedTimeToExistingUsersDeleteQuery
                = StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob(this.revertUserMethodName);
            Sql(revertModifiedTimeToExistingUsersDeleteQuery);

            // Remove startup runner to add missing userId, customerId, organisationId, tenantId to person
            var addMissingIdsToPersonQuery = StartupJobRunnerQueryHelper
                .GenerateDeleteQueryForStartupJob(addMissingIdsToPersonReadModelMethodName);
            Sql(addMissingIdsToPersonQuery);

            // Remove startup runner to apply tenant new id to claim attachments
            var addTenantNewIdToClaimAttachmentQuery =
                StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob(setTenantNewIdToClaimAttachmentMethodName);
            Sql(addTenantNewIdToClaimAttachmentQuery);

            // Remove startup runner to apply tenant new id to portals
            var addTenantNewIdToPortalsQuery =
                StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob(setTenantNewIdToPortalMethodName);
            Sql(addTenantNewIdToPortalsQuery);

            // Remove startup runner to populate file contents for quote attachments
            Sql(StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob(this.populateFileContentsForQuoteAttachmentMethodName));

            // Remove startup runner for setting default org Ids to portals
            Sql(StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob(
                "SetDefaultOrganisationIdOnPortals_20211001"));
        }
    }
}
