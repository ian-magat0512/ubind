// <auto-generated />
#pragma warning disable 1591
namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    using System.IO;
    using UBind.Persistence.Helpers;

    public partial class AddAggregateTypeToEventsAndAddTenantIdToFields : DbMigration
    {
        public override void Up()
        {
            DropPrimaryKey("dbo.StreetAddressReadModels");
            DropPrimaryKey("dbo.EmailAddressReadModels");
            DropPrimaryKey("dbo.MessengerIdReadModels");
            DropPrimaryKey("dbo.PhoneNumberReadModels");
            DropPrimaryKey("dbo.SocialMediaIdReadModels");
            DropPrimaryKey("dbo.WebsiteAddressReadModels");
            AddColumn("dbo.StreetAddressReadModels", "Id", c => c.Guid(nullable: false));
            AddColumn("dbo.StreetAddressReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.EmailAddressReadModels", "Id", c => c.Guid(nullable: false));
            AddColumn("dbo.EmailAddressReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.EventRecordWithGuidIds", "AggregateType", c => c.Int(nullable: false));
            AddColumn("dbo.EventRecordWithStringIds", "AggregateType", c => c.Int(nullable: false));
            AddColumn("dbo.MessengerIdReadModels", "Id", c => c.Guid(nullable: false));
            AddColumn("dbo.MessengerIdReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.PaymentAllocationReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.Invoices", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.PaymentReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.PhoneNumberReadModels", "Id", c => c.Guid(nullable: false));
            AddColumn("dbo.PhoneNumberReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.SocialMediaIdReadModels", "Id", c => c.Guid(nullable: false));
            AddColumn("dbo.SocialMediaIdReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.WebsiteAddressReadModels", "Id", c => c.Guid(nullable: false));
            AddColumn("dbo.WebsiteAddressReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.RefundAllocationReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.CreditNotes", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.RefundReadModels", "TenantId", c => c.Guid(nullable: false));
            AddColumn("dbo.QuoteFileAttachments", "TenantId", c => c.Guid(nullable: false));

            // fill up Id column initially.
            this.Sql($"UPDATE StreetAddressReadModels SET Id = FieldId");
            this.Sql($"UPDATE EmailAddressReadModels SET Id = FieldId");
            this.Sql($"UPDATE MessengerIdReadModels SET Id = FieldId");
            this.Sql($"UPDATE PhoneNumberReadModels SET Id = FieldId");
            this.Sql($"UPDATE SocialMediaIdReadModels SET Id = FieldId");
            this.Sql($"UPDATE WebsiteAddressReadModels SET Id = FieldId");

            AddPrimaryKey("dbo.StreetAddressReadModels", "Id");
            AddPrimaryKey("dbo.EmailAddressReadModels", "Id");
            AddPrimaryKey("dbo.MessengerIdReadModels", "Id");
            AddPrimaryKey("dbo.PhoneNumberReadModels", "Id");
            AddPrimaryKey("dbo.SocialMediaIdReadModels", "Id");
            AddPrimaryKey("dbo.WebsiteAddressReadModels", "Id");

            // fill up TenantId column.
            this.Sql($"UPDATE model SET model.TenantId = person.TenantId FROM StreetAddressReadModels model JOIN PersonReadModels person ON model.PersonReadModel_Id = person.Id");
            this.Sql($"UPDATE model SET model.TenantId = person.TenantId FROM EmailAddressReadModels model JOIN PersonReadModels person ON model.PersonReadModel_Id = person.Id");
            this.Sql($"UPDATE model SET model.TenantId = person.TenantId FROM MessengerIdReadModels model JOIN PersonReadModels person ON model.PersonReadModel_Id = person.Id");
            this.Sql($"UPDATE model SET model.TenantId = person.TenantId FROM PhoneNumberReadModels model JOIN PersonReadModels person ON model.PersonReadModel_Id = person.Id");
            this.Sql($"UPDATE model SET model.TenantId = person.TenantId FROM SocialMediaIdReadModels model JOIN PersonReadModels person ON model.PersonReadModel_Id = person.Id");
            this.Sql($"UPDATE model SET model.TenantId = person.TenantId FROM WebsiteAddressReadModels model JOIN PersonReadModels person ON model.PersonReadModel_Id = person.Id");
            this.Sql($"UPDATE model SET model.TenantId = quote.TenantId FROM QuoteFileAttachments model JOIN Quotes quote ON model.QuoteId = quote.Id");

            this.Sql(StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJobV1("AddTenantIdToEvents_20220216", runManuallyIfInMultiNode: true));

            var sqlFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Migrations", @"CreateTriggersForSettingIdFromFieldId.sql");
            this.Sql(File.ReadAllText(sqlFile));
        }

        public override void Down()
        {
            DropPrimaryKey("dbo.WebsiteAddressReadModels");
            DropPrimaryKey("dbo.SocialMediaIdReadModels");
            DropPrimaryKey("dbo.PhoneNumberReadModels");
            DropPrimaryKey("dbo.MessengerIdReadModels");
            DropPrimaryKey("dbo.EmailAddressReadModels");
            DropPrimaryKey("dbo.StreetAddressReadModels");

            DropColumn("dbo.WebsiteAddressReadModels", "Id");
            DropColumn("dbo.SocialMediaIdReadModels", "Id");
            DropColumn("dbo.PhoneNumberReadModels", "Id");
            DropColumn("dbo.MessengerIdReadModels", "Id");
            DropColumn("dbo.EmailAddressReadModels", "Id");
            DropColumn("dbo.StreetAddressReadModels", "Id");

            DropColumn("dbo.QuoteFileAttachments", "TenantId");
            DropColumn("dbo.RefundReadModels", "TenantId");
            DropColumn("dbo.CreditNotes", "TenantId");
            DropColumn("dbo.RefundAllocationReadModels", "TenantId");
            DropColumn("dbo.WebsiteAddressReadModels", "TenantId");
            DropColumn("dbo.SocialMediaIdReadModels", "TenantId");
            DropColumn("dbo.PhoneNumberReadModels", "TenantId");
            DropColumn("dbo.PaymentReadModels", "TenantId");
            DropColumn("dbo.Invoices", "TenantId");
            DropColumn("dbo.PaymentAllocationReadModels", "TenantId");
            DropColumn("dbo.MessengerIdReadModels", "TenantId");
            DropColumn("dbo.EventRecordWithStringIds", "AggregateType");
            DropColumn("dbo.EventRecordWithGuidIds", "AggregateType");
            DropColumn("dbo.EmailAddressReadModels", "TenantId");
            DropColumn("dbo.StreetAddressReadModels", "TenantId");
            AddPrimaryKey("dbo.WebsiteAddressReadModels", "FieldId");
            AddPrimaryKey("dbo.SocialMediaIdReadModels", "FieldId");
            AddPrimaryKey("dbo.PhoneNumberReadModels", "FieldId");
            AddPrimaryKey("dbo.MessengerIdReadModels", "FieldId");
            AddPrimaryKey("dbo.EmailAddressReadModels", "FieldId");
            AddPrimaryKey("dbo.StreetAddressReadModels", "FieldId");

            this.Sql(StartupJobRunnerQueryHelper.GenerateDeleteQueryForStartupJob("AddTenantIdToEvents_20220216"));
        }
    }
}
