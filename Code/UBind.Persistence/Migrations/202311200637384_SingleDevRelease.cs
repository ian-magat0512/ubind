// <auto-generated />
#pragma warning disable 1591

namespace UBind.Persistence.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    using UBind.Domain.Helpers;
    using UBind.Persistence.Helpers;
    using UBind.Persistence.Migrations.Extensions;

    public partial class SingleDevRelease : DbMigration
    {
        private const string RestructureReleaseDataStartupJobName = "RestructureReleaseData_20230826";
        private const string DropOldReleaseRelationsStartupJobName = "DropOldReleaseRelations_20230826";

        public override void Up()
        {
            DropForeignKey("dbo.ReleaseDescriptions", "Release_Id", "dbo.Releases");
            DropForeignKey("dbo.ReleaseEvents", "ClaimDetails_Id", "dbo.ReleaseDetails");
            DropForeignKey("dbo.ReleaseEvents", "QuoteDetails_Id", "dbo.ReleaseDetails");
            Sql(SqlHelper.DropForeignKeyIfExists("dbo.ReleaseEvents", "FK_dbo.ReleaseEvents_dbo.ReleaseDetails_Details_Id"));
            DropForeignKey("dbo.ReleaseEvents", "Release_Id", "dbo.Releases");
            DropForeignKey("dbo.ReleaseDescriptions", "DevRelease_Id", "dbo.DevReleases");
            DropForeignKey("dbo.ReleaseEvents", "DevRelease_Id", "dbo.DevReleases");
            AddColumn("dbo.Assets", "FileModifiedTicksSinceEpoch", c => c.Long(nullable: false));
            AddColumn("dbo.Releases", "Description", c => c.String());
            AddColumn("dbo.Releases", "ClaimDetails_Id", c => c.Guid());
            AddColumn("dbo.Releases", "QuoteDetails_Id", c => c.Guid());
            AddColumn("dbo.ReleaseDetails", "FormConfigurationJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "WorkflowJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "IntegrationsJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "AutomationsJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "PaymentJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "PaymentFormJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "FundingJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "ProductJsonLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "SpreadsheetLastModifiedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.ReleaseDetails", "LastSynchronisedTicksSinceEpoch", c => c.Long());
            AddColumn("dbo.DevReleases", "ClaimDetails_Id", c => c.Guid());
            AddColumn("dbo.DevReleases", "QuoteDetails_Id", c => c.Guid());
            CreateIndex("dbo.Releases", "ClaimDetails_Id");
            CreateIndex("dbo.Releases", "QuoteDetails_Id");
            CreateIndex("dbo.DevReleases", "ClaimDetails_Id");
            CreateIndex("dbo.DevReleases", "QuoteDetails_Id");
            AddForeignKey("dbo.Releases", "ClaimDetails_Id", "dbo.ReleaseDetails", "Id");
            AddForeignKey("dbo.Releases", "QuoteDetails_Id", "dbo.ReleaseDetails", "Id");
            AddForeignKey("dbo.DevReleases", "ClaimDetails_Id", "dbo.ReleaseDetails", "Id");
            AddForeignKey("dbo.DevReleases", "QuoteDetails_Id", "dbo.ReleaseDetails", "Id");

            this.Sql(StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJob(RestructureReleaseDataStartupJobName));

            // Do the following after migrations have run and after deployment has been made to all nodes, in a StartupJob:
            /*
            DropIndex("dbo.ReleaseDescriptions", new[] { "Release_Id" });
            DropIndex("dbo.ReleaseDescriptions", new[] { "DevRelease_Id" });
            DropIndex("dbo.ReleaseEvents", new[] { "ClaimDetails_Id" });
            DropIndex("dbo.ReleaseEvents", new[] { "QuoteDetails_Id" });
            DropIndex("dbo.ReleaseEvents", new[] { "Release_Id" });
            DropIndex("dbo.ReleaseEvents", new[] { "DevRelease_Id" });
            DropColumn("dbo.ReleaseDetails", "SpreadsheetPath");
            DropColumn("dbo.ReleaseDetails", "OutboundEmailServersJson");
            DropColumn("dbo.DevReleases", "DevFilesHashString");
            DropTable("dbo.ReleaseDescriptions");
            DropTable("dbo.ReleaseEvents");
            */
            this.Sql(StartupJobRunnerQueryHelper.GenerateInsertQueryForStartupJob(
                DropOldReleaseRelationsStartupJobName,
                runManuallyIfInMultiNode: true,
                precedingStartupJobAliases: new string[] { RestructureReleaseDataStartupJobName }));
        }

        public override void Down()
        {
            this.CreateTableIfNotExists(
                "dbo.ReleaseEvents",
                c => new
                {
                    Id = c.Guid(nullable: false),
                    CreatedTicksSinceEpoch = c.Long(nullable: false),
                    ErrorMessagesJson = c.String(),
                    Discriminator = c.String(nullable: false, maxLength: 128),
                    ClaimDetails_Id = c.Guid(),
                    QuoteDetails_Id = c.Guid(),
                    Release_Id = c.Guid(),
                    DevRelease_Id = c.Guid(),
                })
                .PrimaryKey(t => t.Id);

            this.CreateTableIfNotExists(
                "dbo.ReleaseDescriptions",
                c => new
                {
                    Id = c.Guid(nullable: false),
                    Description = c.String(),
                    CreatedTicksSinceEpoch = c.Long(nullable: false),
                    Release_Id = c.Guid(),
                    DevRelease_Id = c.Guid(),
                })
                .PrimaryKey(t => t.Id);

            this.AddColumnIfNotExists("dbo.DevReleases", "DevFilesHashString", c => c.String());
            this.AddColumnIfNotExists("dbo.ReleaseDetails", "OutboundEmailServersJson", c => c.String());
            this.AddColumnIfNotExists("dbo.ReleaseDetails", "SpreadsheetPath", c => c.String());
            DropForeignKey("dbo.DevReleases", "QuoteDetails_Id", "dbo.ReleaseDetails");
            DropForeignKey("dbo.DevReleases", "ClaimDetails_Id", "dbo.ReleaseDetails");
            DropForeignKey("dbo.Releases", "QuoteDetails_Id", "dbo.ReleaseDetails");
            DropForeignKey("dbo.Releases", "ClaimDetails_Id", "dbo.ReleaseDetails");
            DropIndex("dbo.DevReleases", new[] { "QuoteDetails_Id" });
            DropIndex("dbo.DevReleases", new[] { "ClaimDetails_Id" });
            DropIndex("dbo.Releases", new[] { "QuoteDetails_Id" });
            DropIndex("dbo.Releases", new[] { "ClaimDetails_Id" });
            DropColumn("dbo.Quotes", "ProductReleaseId");
            DropColumn("dbo.PolicyTransactions", "ProductReleaseId");
            DropColumn("dbo.DevReleases", "QuoteDetails_Id");
            DropColumn("dbo.DevReleases", "ClaimDetails_Id");
            DropColumn("dbo.ReleaseDetails", "LastSynchronisedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "SpreadsheetLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "ProductJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "FundingJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "PaymentFormJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "PaymentJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "AutomationsJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "IntegrationsJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "WorkflowJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.ReleaseDetails", "FormConfigurationJsonLastModifiedTicksSinceEpoch");
            DropColumn("dbo.Releases", "QuoteDetails_Id");
            DropColumn("dbo.Releases", "ClaimDetails_Id");
            DropColumn("dbo.Releases", "Description");
            DropColumn("dbo.Assets", "FileModifiedTicksSinceEpoch");
            this.CreateIndexDropFirstIfExists("dbo.ReleaseEvents", "DevRelease_Id");
            this.CreateIndexDropFirstIfExists("dbo.ReleaseEvents", "Release_Id");
            this.CreateIndexDropFirstIfExists("dbo.ReleaseEvents", "QuoteDetails_Id");
            this.CreateIndexDropFirstIfExists("dbo.ReleaseEvents", "ClaimDetails_Id");
            this.CreateIndexDropFirstIfExists("dbo.ReleaseDescriptions", "DevRelease_Id");
            this.CreateIndexDropFirstIfExists("dbo.ReleaseDescriptions", "Release_Id");
            AddForeignKey("dbo.ReleaseEvents", "DevRelease_Id", "dbo.DevReleases", "Id");
            AddForeignKey("dbo.ReleaseDescriptions", "DevRelease_Id", "dbo.DevReleases", "Id");
            AddForeignKey("dbo.ReleaseEvents", "Release_Id", "dbo.Releases", "Id");
            AddForeignKey("dbo.ReleaseEvents", "QuoteDetails_Id", "dbo.ReleaseDetails", "Id");
            AddForeignKey("dbo.ReleaseEvents", "ClaimDetails_Id", "dbo.ReleaseDetails", "Id");
            AddForeignKey("dbo.ReleaseDescriptions", "Release_Id", "dbo.Releases", "Id");
        }
    }
}
