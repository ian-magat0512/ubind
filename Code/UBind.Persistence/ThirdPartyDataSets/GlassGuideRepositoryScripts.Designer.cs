//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UBind.Persistence.ThirdPartyDataSets {
    using Humanizer;
    using Lucene.Net.Sandbox.Queries;
    using StackExchange.Redis;
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GlassGuideRepositoryScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GlassGuideRepositoryScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UBind.Persistence.ThirdPartyDataSets.GlassGuideRepositoryScripts", typeof(GlassGuideRepositoryScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  
        ///CREATE TABLE [GG_Vehicle](
        ///	[GlassCode] [varchar](50) NOT NULL,
        ///	[Nvic] [varchar](50) NOT NULL,
        ///	[DataCode] [varchar](50) NOT NULL,
        ///	[VehicleTypeCode] [varchar](50) NOT NULL,
        ///	[VehicleTypeDescription] [varchar](100) NOT NULL,
        ///	[YearGroup] int NULL,
        ///	[MonthGroup] int NULL,
        ///	[MakeCode] [varchar](50) NULL,
        ///	[MakeDescription] [varchar](100) NULL,
        ///	[FamilyCode] [varchar](50) NULL,
        ///	[FamilyDescription] [varchar](100) NULL,
        ///	[Variant] [varchar](100) NULL,
        ///	[Series] [varchar](100) NULL,
        ///	[Body] [varchar](100) NULL,
        ///	[EngineType] [varchar](100) NULL,
        ///	[EngineVolume] int NULL,
        ///	[EngineSize] [varchar](50) NULL,
        ///	[Transmission] [varchar](100) NULL,
        ///	[Cylinders] int NULL,
        ///	[LowTradeValue] int NULL,
        ///	[HighTradeValue] int NULL,
        ///	[DealerUsedValue] int NULL,
        ///	[BelowAverageValue] int NULL,
        ///	[AverageValue] int NULL,
        ///	[AboveAverageValue] int NULL,
        ///	[NewPrice] int NULL,
        ///	[UsedPrice] int NULL,
        ///) ;
        ///
        ///CREATE TABLE [GG_Make](
        ///	[MakeCode] [varchar](50) NULL,
        ///	[MakeDescription] [varchar](100) NULL,
        ///	[StartYear] [int] NULL,
        ///	[LatestYear] [int] NULL,
        ///) ;
        ///
        ///CREATE TABLE [GG_Family](
        ///	[MakeCode] [varchar](50) NULL,
        ///	[FamilyCode] [varchar](50) NULL,
        ///	[FamilyDescription] [varchar](100) NULL,
        ///	[VehicleTypeCode] [varchar](50) NULL,
        ///	[StartYear] [int] NULL,
        ///	[LatestYear] [int] NULL,
        ///) ;
        ///
        ///CREATE TABLE [GG_Year](
        ///	[MakeCode] [varchar](50) NULL,
        ///	[FamilyCode] [varchar](50) NULL,
        ///	[YearGroup] [int] NULL,
        ///) ;
        /// </summary>
        internal static string CreateGlassGuideTable {
            get {
                return ResourceManager.GetString("CreateTable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to DECLARE @TableIndex NVARCHAR(MAX);
        ///DECLARE @Columns NVARCHAR(MAX);
        ///DECLARE @SqlQuery NVARCHAR(MAX);
        ///DECLARE @DropViewQuery NVARCHAR(MAX);
        ///DECLARE @Schema NVARCHAR(MAX);
        ///
        ///SET @Schema = &apos;{0}&apos;
        ///SET @TableIndex = &apos;{1}&apos;
        ///
        ///-- Create a table to store the list of tables
        ///CREATE TABLE #TableList
        ///(
        ///    TableName NVARCHAR(MAX)
        ///);
        ///
        ///-- Insert the fixed list of tables into the temporary table
        ///IF @TableIndex = &apos;&apos;
        ///	BEGIN
        ///		-- Insert the fixed list of tables into the temporary table
        ///		INSERT INTO #TableList  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateTableBoundedView
        {
            get
            {
                return ResourceManager.GetString("CreateTableBoundedView", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to
        ///IF NOT EXISTS (
        ///		SELECT *
        ///        FROM sys.indexes
        ///		WHERE name = 'Index1_GG_Vehicle'
        ///			AND object_id = OBJECT_ID('GlassGuide.GG_Vehicle')
        ///		)
        ///BEGIN
        ///	CREATE NONCLUSTERED INDEX [Index1_GG_Vehicle] ON [GlassGuide].[GG_Vehicle] (
        ///		[GlassCode] ASC
        ///		,[Nvic] ASC
        ///		,[YearGroup] ASC
        ///		,[MakeCode] ASC
        ///		,[FamilyCode] ASC
        ///		)
        ///		WITH (
        ///				SORT_IN_TEMPDB = OFF
        ///				,DROP_EXISTING = OFF
        ///				,ONLINE = OFF
        ///				) ON [PRIMARY];
        ///END
        /// </summary>
        internal static string GlassGuide_Add_Index_And_Fk_Constraints {
            get {
                return ResourceManager.GetString("Add_Index_And_Fk_Constraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT
        ///	[GlassCode],
        ///	[Nvic],
        ///	[DataCode],
        ///	[VehicleTypeCode],
        ///	[VehicleTypeDescription],
        ///	[YearGroup],
        ///	[MonthGroup],
        ///	[MakeCode],
        ///	[MakeDescription],
        ///	[FamilyCode],
        ///	[FamilyDescription],
        ///	[Variant],
        ///	[Series],
        ///	[Body],
        ///	[EngineType],
        ///	[EngineVolume],
        ///	[EngineSize],
        ///	[Transmission],
        ///	[Cylinders],
        ///	[LowTradeValue],
        ///	[HighTradeValue],
        ///	[DealerUsedValue],
        ///	[BelowAverageValue],
        ///	[AverageValue],
        ///	[AboveAverageValue],
        ///	[NewPrice],
        ///	[UsedPrice]
        ///FROM [GlassGuide].[GG_Vehicle]
        ///WHERE [GlassCode] = @GlassCode
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleByVehicleKey {
            get {
                return ResourceManager.GetString("Dml_GetVehicleByVehicleKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT
        ///	[MakeCode],
        ///	[FamilyCode],
        ///	[FamilyDescription],
        ///	[VehicleTypeCode],
        ///	[StartYear],
        ///	[LatestYear]
        ///FROM [GlassGuide].[GG_Family]
        ///WHERE [MakeCode] = @MakeCode
        ///ORDER BY [FamilyDescription]
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleFamiliesByMakeCode {
            get {
                return ResourceManager.GetString("Dml_GetVehicleFamiliesByMakeCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT
        ///	[MakeCode],
        ///	[FamilyCode],
        ///	[FamilyDescription],
        ///	[VehicleTypeCode],
        ///	[StartYear],
        ///	[LatestYear]
        ///FROM [GlassGuide].[GG_Family]
        ///WHERE [MakeCode] = @MakeCode
        ///	AND @Year BETWEEN [StartYear] AND [LatestYear]
        ///ORDER BY [FamilyDescription]
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleFamiliesByMakeCodeAndYear {
            get {
                return ResourceManager.GetString("Dml_GetVehicleFamiliesByMakeCodeAndYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT
        ///    DISTINCT GlassGuide.GG_Vehicle.GlassCode,
        ///    GlassGuide.GG_Vehicle.VehicleTypeDescription,
        ///    GlassGuide.GG_Vehicle.MakeCode,
        ///    GlassGuide.GG_Make.MakeDescription,
        ///    GlassGuide.GG_Vehicle.FamilyCode,
        ///    GlassGuide.GG_Family.FamilyDescription,
        ///    GlassGuide.GG_Vehicle.YearGroup,
        ///    GlassGuide.GG_Vehicle.MonthGroup
        ///FROM
        ///    [GlassGuide].[GG_Vehicle]
        ///    INNER JOIN GlassGuide.GG_Make ON GlassGuide.GG_Vehicle.MakeCode = GlassGuide.GG_Make.MakeCode
        ///    INNER JOIN GlassGuide.GG_Family ON GlassGuide.GG_Vehicle.FamilyCode = GlassGuide.GG_Family.FamilyCode
        ///WHERE
        ///    GlassGuide.GG_Vehicle.MakeCode = @MakeCode
        ///    AND GlassGuide.GG_Vehicle.FamilyCode = @FamilyCode
        ///    AND GlassGuide.GG_Vehicle.YearGroup = @Year
        ///ORDER BY
        ///    GlassGuide.GG_Vehicle.VehicleTypeDescription
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleListByMakeCodeFamilyCodeAndYear {
            get {
                return ResourceManager.GetString("Dml_GetVehicleListByMakeCodeFamilyCodeAndYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT
        ///	[MakeCode],
        ///	[MakeDescription],
        ///	[StartYear],
        ///	[LatestYear]
        ///FROM  [GlassGuide].[GG_Make]
        ///ORDER BY [MakeDescription]
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleMakes {
            get {
                return ResourceManager.GetString("Dml_GetVehicleMakes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT
        ///	[MakeCode],
        ///	[MakeDescription],
        ///	[StartYear],
        ///	[LatestYear]
        ///FROM [GlassGuide].[GG_Make]
        ///WHERE @Year BETWEEN [StartYear] AND [LatestYear]
        ///ORDER BY [MakeDescription]
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleMakesByYear {
            get {
                return ResourceManager.GetString("Dml_GetVehicleMakesByYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT [YearGroup]
        ///FROM [GlassGuide].[GG_Year]
        ///WHERE [MakeCode] = @MakeCode
        ///GROUP BY [YearGroup]
        ///ORDER BY [YearGroup] DESC
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleYearsByMakeCode {
            get {
                return ResourceManager.GetString("Dml_GetVehicleYearsByMakeCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to
        ///SELECT [YearGroup]
        ///FROM [GlassGuide].[GG_Year]
        ///WHERE [MakeCode] = @MakeCode AND FamilyCode = @FamilyCode
        ///GROUP BY [YearGroup]
        ///ORDER BY [YearGroup] DESC
        /// </summary>
        internal static string GlassGuide_Dml_GetVehicleYearsByMakeCodeAndFamilyCode {
            get {
                return ResourceManager.GetString("Dml_GetVehicleYearsByMakeCodeAndFamilyCode", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to DECLARE @Schema NVARCHAR(MAX);
        ///DECLARE @TableIndex NVARCHAR(MAX);
        ///
        ///-- Set the schema and table index values
        ///SET @Schema = &apos;{0}&apos;;
        ///SET @TableIndex = &apos;{1}&apos;;
        ///
        ///-- Create the temporary table to store table names
        ///CREATE TABLE #TableList
        ///(
        ///    TableName NVARCHAR(MAX)
        ///);
        ///
        ///-- Insert table names into #TableList based on the schema and index
        ///IF @TableIndex = &apos;&apos;
        ///	BEGIN
        ///		-- Insert the fixed list of tables into the temporary table
        ///		INSERT INTO #TableList (TableName)
        ///		SELECT t.name
        ///		FROM sys.tables t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DropTable
        {
            get
            {
                return ResourceManager.GetString("DropTable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to DECLARE @TableName NVARCHAR(128);
        ///DECLARE @Exists INT;
        ///DECLARE @Suffix NVARCHAR(2);
        ///
        ///SET @TableName = (
        ///    SELECT TOP 1 t.name
        ///    FROM sys.tables AS t
        ///    WHERE t.name LIKE &apos;GG_Family_[0-9][0-9]&apos;
        ///    ORDER BY t.create_date DESC
        ///);
        ///
        ///IF @TableName IS NOT NULL
        ///BEGIN
        ///    SET @Exists = 1;
        ///    -- Extract the two-character numeric suffix
        ///    SET @Suffix = SUBSTRING(@TableName, LEN(&apos;GG_Family_&apos;) + 1, 2);
        ///END
        ///ELSE
        ///BEGIN
        ///    SET @Exists = 0;
        ///    SET @Suffix = NULL; -- No matching table, so no suff [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetExistingTableIndex
        {
            get
            {
                return ResourceManager.GetString("GetExistingTableIndex", resourceCulture);
            }
        }
    }
}
