{
    "$id": "https://app.ubind.io/schemas/serialised-entities.schema.1.0.0.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Serialised Entities",
    "description": "Defines the serialised structure of uBind entities. uBind entities are serialised only when necessary, which is only for the purpose of sending json data to a template engine. This schema therefore provides a definition of what data will be available to a template when a particular entity is serialised. uBind entities also typically contain references to other related entites, and at the time of serialisation, it is possible within an automation action to specify which of these related entities should also be serialised and nested within a property of the initial serialised object.",
    "type": "object",
    "properties": {
        "schemaVersion": {
            "type": "string",
            "description": "The version of the schema which this json structure must validate against.",
            "enum": [ "1.0.0" ]
        },
        "quote": { "$ref": "#quote" },
        "quoteVersion": { "$ref": "#quoteVersion" },
        "policy": { "$ref": "#policy" },
        "policyTransaction": { "$ref": "#policyTransaction" },
        "claim": { "$ref": "#claim" },
        "claimVersion": { "$ref": "#claimVersion" },
        "invoice": { "$ref": "#invoice" },
        "creditNote": { "$ref": "#creditNote" },
        "payment": { "$ref": "#payment" },
        "refund": { "$ref": "#refund" },
        "customer": { "$ref": "#customer" },
        "person": { "$ref": "#person" },
        "commercialEntity": { "$ref": "#commercialEntity" },
        "tenant": { "$ref": "#tenant" },
        "product": { "$ref": "#product" },
        "portal": { "$ref": "#portal" },
        "organisation": { "$ref": "#organisation" },
        "user": { "$ref": "#user" },
        "role": { "$ref": "#role" },
        "message": { "$ref": "#message" },
        "file": { "$ref": "#file" },
        "event": { "$ref": "#event" }
    },
    "required": [ "schemaVersion" ],
    "anyOf": [
        { "required": [ "quote" ] },
        { "required": [ "quoteVersion" ] },
        { "required": [ "policy" ] },
        { "required": [ "policyTransaction" ] },
        { "required": [ "claim" ] },
        { "required": [ "claimV ersion" ] },
        { "required": [ "invoice" ] },
        { "required": [ "creditNote" ] },
        { "required": [ "payment" ] },
        { "required": [ "refund" ] },
        { "required": [ "customer" ] },
        { "required": [ "person" ] },
        { "required": [ "commercialEntity" ] },
        { "required": [ "tenant" ] },
        { "required": [ "product" ] },
        { "required": [ "portal" ] },
        { "required": [ "organisation" ] },
        { "required": [ "user" ] },
        { "required": [ "role" ] },
        { "required": [ "message" ] },
        { "required": [ "file" ] },
        { "required": [ "event" ] }
    ],
    "additionalProperties": false,


    "definitions": {

        "quote": {
            "$id": "#quote",
            "type": "object",
            "description": "A quote object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the quote."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the quote, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the quote, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the quote, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the quote, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the quote.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the quote.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the quote, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the quote, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the quote, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the quote, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the quote.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the quote.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "expiryTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The expiry timestamp of the quote, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "expiryDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The expiry datetime of the quote, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "expiryLocalDate": {
                    "type": "string",
                    "description": "The local expiry date of the quote, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "expiryLocalTime": {
                    "type": "string",
                    "description": "The local expiry time of the quote, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "expiryLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local expiry time and date values for the quote.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "expiryLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local expiry time and date values for the quote.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this quote."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this quote."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this quote."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this quote."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this quote."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this quote."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product associated with this quote."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product associated with this quote."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this quote (if appliable)."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this quote (if appliable)."
                },
                "policyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy associated with this quote (if applicable)."
                },
                "policy": {
                    "$ref": "#policy",
                    "description": "The policy associated with this quote (if applicable)."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this quote is associated."
                },
                "policyTransactionType": {
                    "$ref": "#policyTransactionType",
                    "description": "The policy transaction type associated with this quote."
                },
                "state": {
                    "type": "string",
                    "pattern": "^[A-Za-z]+$",
                    "description": "The current state of the quote, based on the state machine configured for the associated product."
                },
                "currentWorkflowStep": {
                    "type": "string",
                    "pattern": "^[A-Za-z]+$",
                    "description": "The most recent workflow step the user accessed when editing this quote."
                },
                "quoteReference": {
                    "type": "string",
                    "pattern": "^[A-Z]{6}$",
                    "description": "The quote reference assigned to the quote (if applicable)."
                },
                "formData": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are unformatted."
                },
                "formDataFormatted": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are formatted based on their data type."
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, used as rating factors."
                },
                "calculation": {
                    "$ref": "#quoteCalculation",
                    "description": "The results from the most recent calculation performed for this quote, with values that are unformatted."
                },
                "calculationFormatted": {
                    "$ref": "#quoteCalculationFormatted",
                    "description": "The results from the most recent calculation performed for this quote, with values that are formatted based on their data type."
                },
                "policyTransactionId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy transaction associated with this quote (if appliable)."
                },
                "policyTransaction": {
                    "$ref": "#policyTransaction",
                    "description": "The policy transaction associated with this quote (if appliable)."
                },
                /*
                  "invoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the invoice associated with this quote (if appliable)."
                  },
                  "invoice": {
                      "$ref": "#invoice",
                      "description": "The invoice associated with this quote (if appliable)."
                  },
                  "creditNoteId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the credit note associated with this quote (if appliable)."
                  },
                  "creditNote": {
                      "$ref": "#creditNote",
                      "description": "The credit note associated with this quote (if appliable)."
                  },
                  */
                "versions": {
                    "type": "array",
                    "description": "A list of quote versions for this quote.",
                    "items": {
                        "$ref": "#quoteVersion",
                        "description": "A quote version for this quote."
                    },
                    "additionalItems": false
                },
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this quote.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this quote.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the quote.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                // REMARKS: invoiceNumber and creditNoteNumber in #quote is only temporary. UB-8186
                "invoiceNumber": {
                    "type": "string",
                    "description": "The invoice number of the invoice."
                },
                "creditNoteNumber": {
                    "type": "string",
                    "description": "The credit note number of the credit note."
                },
                // REMARKS: drn and crn in #quote is only temporary. UB-10711
                "deftPaymentReferenceNumber": {
                  "type": "string",
                    "description": "The DEFT reference number for the payment made."
                },
                "deftCustomerReferenceNumber": {
                  "type": "string",
                    "description": "The customer reference number for the payment made via DEFT."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this quote is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "environment",
                "policyTransactionType",
                "state",
                "quoteReference"
            ],
            "additionalProperties": false
        },

        "quoteVersion": {
            "$id": "#quoteVersion",
            "type": "object",
            "description": "A quote version object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of this quote version."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the quote version, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the quote version, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the quote version, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the quote version, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the quote version.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the quote version.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the quote version, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the quote version, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the quote version, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the quote version, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the quote version.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the quote version.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this quote version."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this quote version."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this quote version."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this quote version."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this quote version."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this quote version."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product associated with this quote version."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product associated with this quote version."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this quote version (if appliable)."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this quote version (if applicable)."
                },
                "quoteId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the quote associated with this quote version."
                },
                "quote": {
                    "$ref": "#quote",
                    "description": "The quote associated with this quote version."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this quote version is associated."
                },
                "policyTransactionType": {
                    "$ref": "#policyTransactionType",
                    "description": "The policy transaction type associated with this quote version."
                },
                "quoteReference": {
                    "type": "string",
                    "pattern": "^[A-Z]{6}-[0-9]+$",
                    "description": "The quote reference assigned to the quote version."
                },
                "formData": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are unformatted."
                },
                "formDataFormatted": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are formatted based on their data type."
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The questions and answers collected by the form that are associated with the quote version."
                },
                "calculation": {
                    "$ref": "#quoteCalculation",
                    "description": "The results from the most recent calculation performed for this quote version, with values that are unformatted."
                },
                "calculationFormatted": {
                    "$ref": "#quoteCalculationFormatted",
                    "description": "The results from the most recent calculation performed for this quote version, with values that are formatted based on their data type."
                },
                "versionNumber": {
                    "type": "integer",
                    "description": "The version number of the quote version."
                },
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this quote version.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this quote version.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the quote version.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this quote version is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "quoteId",
                "environment",
                "policyTransactionType",
                "quoteReference",
                "versionNumber"
            ],
            "additionalProperties": false
        },

        "policy": {
            "$id": "#policy",
            "type": "object",
            "description": "A policy object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of this policy."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the policy, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the policy, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the policy, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the policy, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the policy.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the policy.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the policy, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the policy, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the policy, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the policy, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the policy.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the policy.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "inceptionTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The inception timestamp of the policy, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "inceptionDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The inception datetime of the policy, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "inceptionLocalDate": {
                    "type": "string",
                    "description": "The local inception date of the policy, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "inceptionLocalTime": {
                    "type": "string",
                    "description": "The local inception time of the policy, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "inceptionLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local inception time and date values for the policy.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "inceptionLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local inception time and date values for the policy.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "latestPolicyPeriodStartTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The start time of the most recently created policy period, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "latestPolicyPeriodStartDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The start date time of the most recently created policy period, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "latestPolicyPeriodStartDate": {
                    "type": "string",
                    "description": "The local date of the most recently created policy period, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "latestPolicyPeriodStartTime": {
                    "type": "string",
                    "description": "The local time of the most recently created policy period, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "latestPolicyPeriodStartTimeZoneName": {
                    "type": "string",
                    "description": "The time zone used to determine the start time of the most recently created policy period.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "latestPolicyPeriodStartTimeZoneAbbreviation": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the start time of the most recently created policy period.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "expiryTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The expiry timestamp of the policy, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "expiryDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The expiry datetime of the policy, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "expiryLocalDate": {
                    "type": "string",
                    "description": "The local expiry date of the policy, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "expiryLocalTime": {
                    "type": "string",
                    "description": "The local expiry time of the policy, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "expiryLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local expiry time and date values for the policy.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "expiryLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local expiry time and date values for the policy.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this policy."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this policy."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this policy."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this policy."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this policy."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this policy."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product customer associated with this policy."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product customer associated with this policy."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this policy."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this policy."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this policy is associated."
                },
                "status": {
                    "type": "string",
                    "pattern": "^[A-Za-z]+$",
                    "description": "The current status of the policy.",
                    "enum": [ "pending", "active", "cancelled", "expired" ]
                },
                "policyNumber": {
                    "type": "string",
                    "description": "The policy number of the policy."
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The questions and answers collected by the form and used as rating factors."
                },
                "formData": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are unformatted."
                },
                "formDataFormatted": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are formatted based on their data type."
                },
                "premium": {
                    "$ref": "#premiumBreakdown",
                    "description": "The breakdown of the total premium for the current policy period."
                },
                "premiumFormatted": {
                    "$ref": "#premiumBreakdownFormatted",
                    "description": "The breakdown of the total premium for the current policy period."
                },
                "quotes": {
                    "type": "array",
                    "description": "A list of quotes that were created in association with this policy.",
                    "items": {
                        "$ref": "#quote"
                    },
                    "additionalItems": false
                },
                "policyTransactions": {
                    "type": "array",
                    "description": "A list of all policy transactions associated with this policy.",
                    "items": {
                        "$ref": "#policyTransaction"
                    },
                    "additionalItems": false
                },
                "claims": {
                    "type": "array",
                    "description": "A list of all claims associated with this policy..",
                    "items": {
                        "$ref": "#claim"
                    },
                    "additionalItems": false
                },
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this policy.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this policy.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the policy.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this policy is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "inceptionDateTime",
                "inceptionLocalDate",
                "inceptionLocalTime",
                "inceptionLocalTimeZone",
                "inceptionLocalTimeZoneAlias",
                "expiryDateTime",
                "expiryLocalDate",
                "expiryLocalTime",
                "expiryLocalTimeZone",
                "expiryLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "environment",
                "status",
                "policyNumber",
                "questions",
                "premium"
            ],
            "additionalProperties": false
        },

        "policyTransaction": {
            "$id": "#policyTransaction",
            "type": "object",
            "description": "A policy transaction object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy transaction."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "inceptionTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The inception timestamp of the policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "inceptionDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The inception datetime of the policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "inceptionLocalDate": {
                    "type": "string",
                    "description": "The local inception date of the policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "inceptionLocalTime": {
                    "type": "string",
                    "description": "The local inception time of the policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "inceptionLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local inception time and date values for the policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "inceptionLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local inception time and date values for the policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "expiryTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The expiry timestamp of the policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "expiryDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The expiry datetime of the policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "expiryLocalDate": {
                    "type": "string",
                    "description": "The local expiry date of the policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "expiryLocalTime": {
                    "type": "string",
                    "description": "The local expiry time of the policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "expiryLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local expiry time and date values for the policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "expiryLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local expiry time and date values for the policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "adjustmentTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The adjustment timestamp of an adjustment policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "adjustmentDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The adjustment datetime of an adjustment policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "adjustmentLocalDate": {
                    "type": "string",
                    "description": "The local expiry date of an adjustment policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "adjustmentLocalTime": {
                    "type": "string",
                    "description": "The local adjustment time of an adjustment policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "adjustmentLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local adjustment time and date values for an adjustment policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "adjustmentLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local adjustment time and date values for an adjustment policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "cancellationTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The cancellation timestamp of an cancellation policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "cancellationDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The cancellation datetime of an cancellation policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "cancellationLocalDate": {
                    "type": "string",
                    "description": "The local cancellation date of a cancellation policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "cancellationLocalTime": {
                    "type": "string",
                    "description": "The local cancellation time of a cancellation policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "cancellationLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local cancellation time and date values for a cancellation policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "cancellationLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local cancellation time and date values for a cancellation policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "effectiveTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The effective timestamp of the policy transaction, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "effectiveDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The effective datetime of the policy transaction, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "effectiveLocalDate": {
                    "type": "string",
                    "description": "The local effective date of the policy transaction, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'. For a new business or renewal transaction this is the policy inception date, for a adjustment transactions this is the adjustment date, and for cancellation transactions this is the cancellation date.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "effectiveLocalTime": {
                    "type": "string",
                    "description": "The local effective time of the policy transaction, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting). For a new business or renewal transaction this is the policy inception time, for a adjustment transactions this is the adjustment time, and for cancellation transactions this is the cancellation time.",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "effectiveLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local effective time and date values for the policy transaction.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "effectiveLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local effective time and date values for the policy transaction.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this policy transaction."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this policy transaction."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this policy transaction."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this policy transaction."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this policy transaction."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this policy transaction."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product associated with this policy transaction."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product associated with this policy transaction."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this policy transaction."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this policy transaction."
                },
                "policyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy associated with this policy transaction."
                },
                "policy": {
                    "$ref": "#policy",
                    "description": "The policy associated with this policy transaction."
                },
                "quoteId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the quote associated with this policy transaction."
                },
                "quote": {
                    "$ref": "#quote",
                    "description": "The quote associated with this policy transaction."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this policy transaction is associated."
                },
                "policyTransactionType": {
                    "$ref": "#policyTransactionType",
                    "description": "The policy transaction type associated with this policy transaction."
                },
                "status": {
                    "type": "string",
                    "pattern": "^[A-Za-z]+$",
                    "description": "The current status of the policy transaction.",
                    "enum": [ "pending", "active", "complete", "void" ]
                },
                "formData": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are unformatted."
                },
                "formDataFormatted": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are formatted based on their data type."
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The questions and answers collected by the form and used as rating factors in the calculation for this policy transaction."
                },
                "calculation": {
                    "$ref": "#quoteCalculation",
                    "description": "The results from the calculation associated with this policy transaction."
                },
                "calculationFormatted": {
                    "$ref": "#quoteCalculationFormatted",
                    "description": "The results from the most recent calculation performed for this policy transaction, with values that are formatted based on their data type."
                },
                /*
                  "invoiceId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the invoice associated with this policy transaction (if appliable)."
                  },
                  "invoice": {
                      "$ref": "#invoice",
                      "description": "The invoice associated with this policy transaction (if appliable)."
                  },
                  "creditNoteId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the credit note associated with this policy transaction (if appliable)."
                  },
                  "creditNote": {
                      "$ref": "#creditNote",
                      "description": "The credit note associated with this policy transaction (if appliable)."
                  },
                  */
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this policy transaction.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this policy transaction.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the policy transaction.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this policy transaction is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "effectiveTicksSinceEpoch",
                "effectiveDateTime",
                "effectiveLocalDate",
                "effectiveLocalTime",
                "effectiveLocalTimeZone",
                "effectiveLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "policyId",
                "quoteId",
                "environment",
                "policyTransactionType",
                "status",
                "questions",
                "calculation"
            ],
            "additionalProperties": false
        },

        "claim": {
            "$id": "#claim",
            "type": "object",
            "description": "A claim object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the claim."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the claim, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the claim, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the claim, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the claim, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the claim.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the claim.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the claim, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the claim, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the claim, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the claim, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the claim.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the claim.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this claim."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this claim."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this claim."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this claim."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this claim."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this claim."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product the claim is for."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product that the claim is for."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer the claim is for."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer that the claim is for."
                },
                "policyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy associated with this claim."
                },
                "policy": {
                    "$ref": "#policy",
                    "description": "The policy associated with this claim."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this claim is associated."
                },
                "state": {
                    "type": "string",
                    "pattern": "^[A-Za-z]+$",
                    "description": "The current state of the claim, based on the claim state machine configured for the associated product."
                },
                "currentWorkflowStep": {
                    "type": "string",
                    "pattern": "^[A-Za-z]+$",
                    "description": "The most recent workflow step the user accessed when editing this claim."
                },
                "claimReference": {
                    "type": "string",
                    "pattern": "^[A-Z]{6}$",
                    "description": "The claim reference assigned to the claim, if applicable."
                },
                "claimNumber": {
                    "type": "string",
                    "description": "The claim number of the claim, if applicable."
                },
                "formData": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are unformatted."
                },
                "formDataFormatted": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are formatted based on their data type."
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form."
                },
                "calculation": {
                    "$ref": "#claimCalculation",
                    "description": "The results from the most recent calculation performed for this claim."
                },
                "calculationFormatted": {
                    "$ref": "#claimCalculationFormatted",
                    "description": "The results from the most recent calculation performed for this claim, with values that are formatted based on their data type."
                },
                "versions": {
                    "type": "array",
                    "description": "A list of claim versions for this claim.",
                    "items": {
                        "$ref": "#claimVersion",
                        "description": "A claim version for this claim."
                    },
                    "additionalItems": false
                },
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this claim.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this claim.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the claim.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this claim is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "policyId",
                "environment",
                "claimReference",
                "state"
            ],
            "additionalProperties": false
        },

        "claimVersion": {
            "$id": "#claimVersion",
            "type": "object",
            "description": "A claim version object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the claim version."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the claim version, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the claim version, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the claim version, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the claim version, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the claim version.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the claim version.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the claim version, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the claim version, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the claim version, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the claim version, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the claim version.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the claim version.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this claim version."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this claim version."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this claim version."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this claim version."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this claim version."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this claim version."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product associated with this claim version."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product associated with this claim version."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this claim version (if appliable)."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this claim version (if applicable)."
                },
                "claimId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the claim associated with this claim version."
                },
                "claim": {
                    "$ref": "#claim",
                    "description": "The quclaimote associated with this claim version."
                },
                "policyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy associated with this claim."
                },
                "policy": {
                    "$ref": "#policy",
                    "description": "The policy associated with this claim."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this claim version is associated."
                },
                "claimReference": {
                    "type": "string",
                    "pattern": "^[A-Z]{6}-[0-9]+$",
                    "description": "The claim reference assigned to the claim version."
                },
                "versionNumber": {
                    "type": "integer",
                    "description": "The version number of the claim version."
                },
                "formData": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are unformatted."
                },
                "formDataFormatted": {
                    "$ref": "#formData",
                    "description": "The most recent version of the questions and answers collected by the form, with values that are formatted based on their data type."
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The questions and answers collected by the form that are associated with the claim version."
                },
                "calculation": {
                    "$ref": "#claimCalculation",
                    "description": "The results from the most recent calculation performed for this claim version, with values that are unformatted."
                },
                "calculationFormatted": {
                    "$ref": "#claimCalculationFormatted",
                    "description": "The results from the most recent calculation performed for this claim version, with values that are formatted based on their data type."
                },
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this claim version.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this claim version.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the claim version.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this claim version is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "claimId",
                "policyId",
                "environment",
                "claimReference",
                "versionNumber"
            ],
            "additionalProperties": false
        },

        "invoice": {
            "$id": "#invoice",
            "type": "object",
            "description": "An invoice object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the invoice."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the invoice, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the invoice, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the invoice, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the invoice, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the invoice.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the invoice.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the invoice, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the invoice, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the invoice, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the invoice, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the invoice.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the invoice.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "invoiceTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The invoice timestamp of the invoice, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "invoiceDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The invoice datetime of the invoice, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "invoiceLocalDate": {
                    "type": "string",
                    "description": "The local invoice date of the invoice, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "invoiceLocalTime": {
                    "type": "string",
                    "description": "The local invoice time of the invoice, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "invoiceLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local invoice time and date values for the invoice.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "invoiceLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local invoice time and date values for the invoice.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this invoice."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this invoice."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this invoice."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this invoice."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this invoice."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this invoice."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product associated with this invoice."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product associated with this invoice."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this invoice."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this invoice."
                },
                "quoteId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the quote associated with this invoice."
                },
                "quote": {
                    "$ref": "#quote",
                    "description": "The quote associated with this invoice."
                },
                "policyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy associated with this invoice (if appliable)."
                },
                "policy": {
                    "$ref": "#policy",
                    "description": "The policy associated with this invoice (if appliable)."
                },
                "policyTransactionId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy transaction associated with this invoice (if appliable)."
                },
                "policyTransaction": {
                    "$ref": "#policyTransaction",
                    "description": "The policy transaction associated with this invoice (if appliable)."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this invoice is associated."
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "The invoice number of the invoice."
                },
                "calculation": {
                    "$ref": "#quoteCalculation",
                    "description": "The results from the calculation associated with the invoice."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this invoice is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "invoiceTicksSinceEpoch",
                "invoiceDateTime",
                "invoiceLocalDate",
                "invoiceLocalTime",
                "invoiceLocalTimeZone",
                "invoiceLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "quoteId",
                "environment",
                "invoiceNumber",
                "calculation"
            ],
            "additionalProperties": false
        },

        "creditNote": {
            "$id": "#creditNote",
            "type": "object",
            "description": "A credit note object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the credit note."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the credit note, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the credit note, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the credit note, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the credit note, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the credit note.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the credit note.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the credit note, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the credit note, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the credit note, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the credit note, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the credit note.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the credit note.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "creditNoteTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The credit note timestamp of the credit note, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "creditNoteDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The credit note datetime of the credit note, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "creditNoteLocalDate": {
                    "type": "string",
                    "description": "The local credit note date of the credit note, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "creditNoteLocalTime": {
                    "type": "string",
                    "description": "The local credit note time of the credit note, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "creditNoteLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local credit note time and date values for the credit note.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "creditNoteLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local credit note time and date values for the credit note.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this credit note."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this credit note."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this credit note."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this credit note."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this credit note."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this credit note."
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product associated with this credit note."
                },
                "product": {
                    "$ref": "#product",
                    "description": "The product associated with this credit note."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this credit note."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this credit note."
                },
                "quoteId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the quote associated with this credit note."
                },
                "quote": {
                    "$ref": "#quote",
                    "description": "The quote associated with this credit note."
                },
                "policyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy associated with this credit note (if appliable)."
                },
                "policy": {
                    "$ref": "#policy",
                    "description": "The policy associated with this credit note (if appliable)."
                },
                "policyTransactionId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the policy transaction associated with this credit note (if appliable)."
                },
                "policyTransaction": {
                    "$ref": "#policyTransaction",
                    "description": "The policy transaction associated with this credit note (if appliable)."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this credit note is associated."
                },
                "creditNoteNumber": {
                    "type": "string",
                    "description": "The credit note number of the credit note."
                },
                "calculation": {
                    "$ref": "#quoteCalculation",
                    "description": "The results from the calculation associated with the invoice."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this credit note is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "creditNoteTicksSinceEpoch",
                "creditNoteDateTime",
                "creditNoteLocalDate",
                "creditNoteLocalTime",
                "creditNoteLocalTimeZone",
                "creditNoteLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "productId",
                "customerId",
                "quoteId",
                "environment",
                "creditNoteNumber",
                "calculation"
            ],
            "additionalProperties": false
        },

        "payment": {
            "$id": "#payment",
            "description": "A payment transaction.",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the payment."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the payment, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the payment, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the payment, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the payment, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the payment.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the payment.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the payment, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the payment, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the payment, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the payment, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the payment.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the payment.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "paymentTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The payment timestamp of the payment, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "paymentDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The payment datetime of the payment, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "paymentLocalDate": {
                    "type": "string",
                    "description": "The local payment date of the payment, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "paymentLocalTime": {
                    "type": "string",
                    "description": "The local payment time of the payment, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "paymentLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local payment time and date values for the payment.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "paymentLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local payment time and date values for the payment.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this payment."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this payment."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this payment."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this payment."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this payment."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this payment."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this payment."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this payment."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this credit note is associated."
                },
                "paymentReference": {
                    "type": "string",
                    "description": "The payment reference for the payment."
                },
                "amount": {
                    "type": "number",
                    "multipleOf": 0.01,
                    "description": "The payment amount. Must be limited to 2 decimal places."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this payment is tagged as test data."
                }
                /*
                  "creditCardPayment": {
                      "$id": "#creditCardPayment",
                      "type": "object",
                      "description": "A credit card payment.",
                      "properties": {
                          "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "The ID (UUID) of the credit card payment."
                          },
                          "paymentSucceeded": {
                              "type": "string",
                              "description": "A value indicating whether the payment attempt succeeded.",
                              "enum": [ "Yes", "No" ]
                          },
                          "paymentReference": {
                              "type": "string",
                              "description": "The DEFT or similar reference number that we store with a successful payment."
                          },
                          "gatewayRequest": {
                              "type": "object",
                              "description": "An object representing the data sent to the payment gateway. JSON schema depends on payment gateway.", // do we need to define these schemas now??
                              "additionalItems": true
                          },
                          "gatewayResponse": {
                              "type": "object",
                              "description": "An object representing the data recieved from the payment gateway. JSON schema depends on payment gateway.", // do we need to define these schemas now??
                              "additionalItems": true
                          }
                      },
                      "required": [ "paymentSucceeded" ],
                      "additionalProperties": false
                  },

                  "premiumFinancePayment": {
                      "$id": "#premiumFinancePayment",
                      "type": "object",
                      "description": "A premium finance payment.",
                      "properties": {
                          "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "The ID (UUID) of the premium funding proposal."
                          },
                          "proposalId": {
                              "type": "string",
                              "description": "The ID used by the funding provider to identify the proposal."
                          },
                          "amountFunded": {
                              "type": "string", // discuss values formatted for merging, vs raw data
                              "description": "The amount being funded in this proposal."
                          },
                          "paymentFrequency": {
                              "type": "string",
                              "description": "The payment frequency of this proposal.",
                              "enum": [ "Monthly", "Fortnightly", "Weekly"] // CONFIRM - Also discuss capitilisation of enum values, PascalCase like C# or camelCase like JS
                          },
                          "numberOfInstalments": {
                              "type": "integer",
                              "description": "The total number of instalments."
                          },
                          "initialInstalmentAmount": {
                              "type": "string",
                              "description": "The amount of the first instalment."
                          },
                          "regularInstalmentAmount": {
                              "type": "string",
                              "description": "The amount of each subsequent instalment."
                          },
                          "gatewayRequest": {
                              "type": "object",
                              "description": "An object representing the data sent to the premium funding gateway. JSON schema depends on the funding provider.", // do we need to define these schemas now??
                              "additionalItems": true
                          },
                          "gatewayResponse": {
                              "type": "object",
                              "description": "An object representing the data recieved from the premium funding gateway. JSON schema depends on the funding provider.", // do we need to define these schemas now??
                              "additionalItems": true
                          }
                      },
                      "required": [
                          "id",
                          "proposalId",
                          "amountFunded",
                          "paymentFrequency",
                          "numberOfInstalments",
                          "initialInstalmentAmount",
                          "regularInstalmentAmount"
                      ],
                      "additionalProperties": false
                  }
                  */
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "paymentTicksSinceEpoch",
                "paymentDateTime",
                "paymentLocalDate",
                "paymentLocalTime",
                "paymentLocalTimeZone",
                "paymentLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "customerId",
                "environment",
                "paymentReference",
                "amount"
            ],
            "additionalProperties": false
        },

        "refund": {
            "$id": "#refund",
            "description": "A refund transaction.",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the refund."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the refund, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the refund, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the refund, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the refund, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the refund.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the refund.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the refund, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the refund, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the refund, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the refund, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the refund.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the refund.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "refundTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The refund timestamp of the refund, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "refundDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The refund datetime of the refund, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "refundLocalDate": {
                    "type": "string",
                    "description": "The local refund date of the refund, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "refundLocalTime": {
                    "type": "string",
                    "description": "The local refund time of the refund, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "refundLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local refund time and date values for the refund.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "refundLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local refund time and date values for the refund.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this refund."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this refund."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this refund."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this refund."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this refund."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this refund."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this refund."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this refund."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this credit note is associated."
                },
                "refundReference": {
                    "type": "string",
                    "description": "The refund reference for the refund."
                },
                "amount": {
                    "type": "number",
                    "multipleOf": 0.01,
                    "description": "The refund amount. Must be limited to 2 decimal places."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this refund is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "refundTicksSinceEpoch",
                "refundDateTime",
                "refundLocalDate",
                "refundLocalTime",
                "refundLocalTimeZone",
                "refundLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "customerId",
                "environment",
                "refundReference",
                "amount"
            ],
            "additionalProperties": false
        },

        "customer": {
            "$id": "#customer",
            "type": "object",
            "description": "A customer object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the customer, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the customer, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the customer, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the customer, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the customer.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the customer.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the customer, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the customer, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the customer, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the customer, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the customer.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the customer.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this customer."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this customer."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this customer."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this customer."
                },
                "portalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the portal associated with this customer."
                },
                "portal": {
                    "$ref": "#portal",
                    "description": "The portal associated with this customer."
                },
                "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the client agent user who is the owner of this customer."
                },
                "owner": {
                    "$ref": "#user",
                    "description": "The client agent user who is the owner of this customer."
                },
                "environment": {
                    "$ref": "#environment",
                    "description": "The environment with which this customer is associated."
                },
                "customerType": {
                    "type": "string",
                    "enum": [ "personal", "commercial" ],
                    "description": "The customer type of the customer."
                },
                "primaryPersonId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the primary person associated with this customer."
                },
                "primaryPerson": {
                    "$ref": "#person",
                    "description": "The primary person associated with this customer."
                },
                "people": {
                    "type": "array",
                    "description": "A list of people associated with this customer.",
                    "items": {
                        "$ref": "#person"
                    },
                    "additionalItems": false
                },
                "primaryCommercialEntityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the primary commercial entity associated with this customer."
                },
                "primaryCommercialEntity": {
                    "$ref": "#commercialEntity",
                    "description": "The primary commercial entity associated with this customer."
                },
                "commercialEntities": {
                    "type": "array",
                    "description": "A list of commercial entities associated with this customer.",
                    "items": {
                        "$ref": "#commercialEntity"
                    },
                    "additionalItems": false
                },
                "quotes": {
                    "type": "array",
                    "description": "A list of quotes that were created in association with this customer.",
                    "items": {
                        "$ref": "#quote"
                    },
                    "additionalItems": false
                },
                "policies": {
                    "type": "array",
                    "description": "A list of all policies associated with this customer.",
                    "items": {
                        "$ref": "#policy"
                    },
                    "additionalItems": false
                },
                "claims": {
                    "type": "array",
                    "description": "A list of all claims associated with this customer.",
                    "items": {
                        "$ref": "#claim"
                    },
                    "additionalItems": false
                },
                "messages": {
                    "type": "array",
                    "description": "A list of messages that were sent in association with this customer.",
                    "items": {
                        "$ref": "#message"
                    },
                    "additionalItems": false
                },
                "documents": {
                    "type": "array",
                    "description": "A list of documents that were generated in association with this customer.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "customerPaymentMethods": {
                    "type": "array",
                    "description": "A list of customer payment methods saved against this customer.",
                    "items": {
                        "$ref": "#customerPaymentMethod"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this customer is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "portalId",
                "environment",
                "customerType",
                "primaryPersonId"
            ],
            "additionalProperties": false
        },

        "person": {
            "$id": "#person",
            "type": "object",
            "description": "A person object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the person."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the person, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the person, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the person, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the person, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the person.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the person.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the person, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the person, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the person, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the person, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the person.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the person.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this person."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this person."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this person."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this person."
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the person."
                },
                "fullName": {
                    "type": "string",
                    "description": "The full name of the person."
                },
                "greetingName": {
                    "type": "string",
                    "description": "The greeting name of the person."
                },
                "namePrefix": {
                    "type": "string",
                    "description": "The name prefix of the person."
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the person."
                },
                "middleNames": {
                    "type": "string",
                    "description": "The middle names of the person."
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the person."
                },
                "nameSuffix": {
                    "type": "string",
                    "description": "The name suffix of the person."
                },
                "preferredName": {
                    "type": "string",
                    "description": "The preferred name of the person."
                },
                "company": {
                    "type": "string",
                    "description": "The company of the person."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the person."
                },
                "phoneNumbers": {
                    "type": "array",
                    "description": "A list of phone numbers associated with this person.",
                    "items": {
                        "$ref": "#phoneNumber"
                    },
                    "additionalItems": false
                },
                "defaultPhoneNumber": {
                    "$ref": "#phoneNumber",
                    "description": "The default phone number associated with this person, if there is one."
                },
                "emailAddresses": {
                    "type": "array",
                    "description": "A list of email addresses associated with this person.",
                    "items": {
                        "$ref": "#emailAddress"
                    },
                    "additionalItems": false
                },
                "defaultEmailAddress": {
                    "$ref": "#emailAddress",
                    "description": "The default email address associated with this person, if there is one."
                },
                "streetAddresses": {
                    "type": "array",
                    "description": "A list of street addresses associated with this person.",
                    "items": {
                        "$ref": "#streetAddress"
                    },
                    "additionalItems": false
                },
                "defaultStreetAddress": {
                    "$ref": "#streetAddress",
                    "description": "The default street address associated with this person, if there is one."
                },
                "websiteAddresses": {
                    "type": "array",
                    "description": "A list of website addresses associated with this person.",
                    "items": {
                        "$ref": "#websiteAddress"
                    },
                    "additionalItems": false
                },
                "defaultWebsiteAddress": {
                    "$ref": "#websiteAddress",
                    "description": "The default website address associated with this person, if there is one."
                },
                "messengerIds": {
                    "type": "array",
                    "description": "A list of messenger IDs associated with this person.",
                    "items": {
                        "$ref": "#messengerId"
                    },
                    "additionalItems": false
                },
                "defaultMessengerId": {
                    "$ref": "#messengerId",
                    "description": "The default messenger ID associated with this person, if there is one."
                },
                "socialMediaIds": {
                    "type": "array",
                    "description": "A list of social media IDs associated with this person.",
                    "items": {
                        "$ref": "#socialMediaId"
                    },
                    "additionalItems": false
                },
                "defaultSocialMediaId": {
                    "$ref": "#socialMediaId",
                    "description": "The default social media ID associated with this person, if there is one."
                },
                "userId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the user account associated with this person, if they have one."
                },
                "user": {
                    "$ref": "#user",
                    "description": "The user account associated with this person, if they have one."
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this person, if applicable."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this person, if applicable."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this person is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "environment"
            ],
            "anyOf": [
                { "required": [ "userId" ] },
                { "required": [ "customerId" ] }
            ],
            "additionalProperties": false
        },

        "commercialEntity": {
            "$id": "#commercialEntity",
            "type": "object",
            "description": "A commercial entity object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the commercial entity."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the commercial entity, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the commercial entity, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the commercial entity, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the commercial entity, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the commercial entity.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the commercial entity.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the commercial entity, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the commercial entity, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the commercial entity, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the commercial entity, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the commercial entity.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the commercial entity.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this commercial entity."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this commercial entity."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this commercial entity."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this commercial entity."
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the commercial entity."
                },
                "fullName": {
                    "type": "string",
                    "description": "The full name of the commercial entity."
                },
                "businessName": {
                    "type": "string",
                    "description": "The business name of the commercial entity."
                },
                "industry": {
                    "type": "string",
                    "description": "The industry of the commercial entity."
                },
                "entityType": {
                    "type": "string",
                    "enum": [ "company", "soleTrader", "partnership", "trust" ],
                    "description": "The entity type of the commercial entity."
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name of the commercial entity."
                },
                "trustName": {
                    "type": "string",
                    "description": "The trust name of the commercial entity."
                },
                "acn": {
                    "type": "string",
                    "description": "The acn of the commercial entity."
                },
                "abn": {
                    "type": "string",
                    "description": "The abn of the commercial entity."
                },
                "phoneNumbers": {
                    "type": "array",
                    "description": "A list of phone numbers associated with this commercial entity.",
                    "items": {
                        "$ref": "#phoneNumber"
                    },
                    "additionalItems": false
                },
                "emailAddresses": {
                    "type": "array",
                    "description": "A list of email addresses associated with this commercial entity.",
                    "items": {
                        "$ref": "#emailAddress"
                    },
                    "additionalItems": false
                },
                "streetAddresses": {
                    "type": "array",
                    "description": "A list of street addresses associated with this commercial entity.",
                    "items": {
                        "$ref": "#streetAddress"
                    },
                    "additionalItems": false
                },
                "websiteAddresses": {
                    "type": "array",
                    "description": "A list of website addresses associated with this commercial entity.",
                    "items": {
                        "$ref": "#websiteAddress"
                    },
                    "additionalItems": false
                },
                "socialMediaIds": {
                    "type": "array",
                    "description": "A list of social media IDs associated with this commercial entity.",
                    "items": {
                        "$ref": "#socialMediaId"
                    },
                    "additionalItems": false
                },
                "customerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the customer associated with this commercial entity."
                },
                "customer": {
                    "$ref": "#customer",
                    "description": "The customer associated with this commercial entity."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this commercial entity is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "environment",
                "customerId"
            ],
            "anyOf": [
                { "required": [ "businessName" ] },
                { "required": [ "companyName" ] },
                { "required": [ "trustName" ] }
            ],
            "additionalProperties": false
        },


        "tenant": {
            "$id": "#tenant",
            "type": "object",
            "description": "A tenant object.",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-z][a-z\\-]+[a-z]$",
                    "description": "The tenant ID of the tenant."
                },
                "alias": {
                    "$ref": "#kebabCaseAlias",
                    "description": "The tenant alias of the tenant.",
                    "examples": [ "abc-insurance" ]
                },
                "name": {
                    "type": "string",
                    "description": "The tenant name of the tenant.",
                    "examples": [ "ABC Insurance" ]
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the tenant, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the tenant, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the tenant, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the tenant, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the tenant.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the tenant.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the tenant, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the tenant, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the tenant, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the tenant, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the tenant.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the tenant.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Represents whether the tenant has been disabled."
                }
            },
            "required": [
                "id",
                "alias",
                "name",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "disabled"
            ],
            "additionalProperties": false
        },

        "product": {
            "$id": "#product",
            "type": "object",
            "description": "A product object.",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-z][a-z\\-]+[a-z]$",
                    "description": "The product ID of the product."
                },
                "alias": {
                    "$ref": "#kebabCaseAlias",
                    "description": "The product alias of the product.",
                    "examples": [ "car-insurance" ]
                },
                "name": {
                    "type": "string",
                    "description": "The product name of the product.",
                    "examples": [ "Car Insurance" ]
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the product, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the product, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the product, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the product, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the product.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the product.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the product, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the product, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the product, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the product, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the product.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the product.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this product."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this product."
                },
                "assetUrl": {
                    "type": "string",
                    "description": "The URL of the assets folder for this productenvironment.",
                    "examples": [ "https://app.ubind.com.au/assets/tenant-alias/product-alias" ]
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Represents whether the product has been disabled."
                }
            },
            "required": [
                "id",
                "alias",
                "name",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "disabled"
            ],
            "additionalProperties": false
        },

        "portal": {
            "$id": "#portal",
            "type": "object",
            "description": "A portal object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The portal ID of the portal."
                },
                "alias": {
                    "$ref": "#kebabCaseAlias",
                    "description": "The portal alias of the portal.",
                    "examples": [ "abc-customer-portal" ]
                },
                "name": {
                    "type": "string",
                    "description": "The portal name of the portal.",
                    "examples": [ "ABC Customer Portal" ]
                },
                "title": {
                    "type": "string",
                    "description": "The title of the portal, which is shown to users.",
                    "examples": [ "ABC Insurance" ]
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the portal, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the portal, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the portal, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the portal, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the portal.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the portal.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the portal, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the portal, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the portal, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the portal, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the portal.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the portal.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this portal."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this portal."
                },
                "locations": {
                    "type": "object",
                    "description": "A portal object.",
                    "properties": {
                        "development": {
                            "type": "object",
                            "description": "The details for the URL that the portal can be access at in the development environment",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL that this portal can be accessed by in the development environment."
                                },
                                "isEmbedded": {
                                    "type": "boolean",
                                    "description": "Represents whether the portal is embedded in another website or app."
                                }
                            },
                            "required": [ "url", "isEmbedded" ]
                        },
                        "staging": {
                            "type": "object",
                            "description": "The details for the URL that the portal can be access at in the staging environment",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL that this portal can be accessed by in the staging environment."
                                },
                                "isEmbedded": {
                                    "type": "boolean",
                                    "description": "Represents whether the portal is embedded in another website or app."
                                }
                            },
                            "required": [ "url", "isEmbedded" ]
                        },
                        "production": {
                            "type": "object",
                            "description": "The details for the URL that the portal can be access at in the production environment",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL that this portal can be accessed by in the production environment."
                                },
                                "isEmbedded": {
                                    "type": "boolean",
                                    "description": "Represents whether the portal is embedded in another website or app."
                                }
                            },
                            "required": [ "url", "isEmbedded" ]
                        }
                    },
                    "required": [ "development", "staging", "production" ],
                    "additionalProperties": false
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Represents whether the portal has been disabled."
                }
            },
            "required": [
                "id",
                "alias",
                "name",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "disabled"
            ],
            "additionalProperties": false
        },

        "organisation": {
            "$id": "#organisation",
            "type": "object",
            "description": "An organisation object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The organisation ID (UUID) of the organisation."
                },
                "alias": {
                    "$ref": "#kebabCaseAlias",
                    "description": "The organisation alias of the organisation.",
                    "examples": [ "abc-insurance" ]
                },
                "name": {
                    "type": "string",
                    "description": "The organisation name of the organisation.",
                    "examples": [ "ABC Insurance" ]
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the organisation, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the organisation, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the organisation, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the organisation, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the organisation.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the organisation.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the organisation, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the organisation, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the organisation, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the organisation, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the organisation.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the organisation.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this organisation."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this organisation."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Represents whether the organisation has been disabled."
                }
            },
            "required": [
                "id",
                "alias",
                "name",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "disabled"
            ],
            "additionalProperties": false
        },

        "user": {
            "$id": "#user",
            "type": "object",
            "description": "A user object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The user ID (UUID) of the user."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the user, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the user, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the user, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the user, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the user.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the user.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the user, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the user, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the user, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the user, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the user.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the user.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this user."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this user."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this user."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this user."
                },
                "portalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the portal associated with this user."
                },
                "portal": {
                    "$ref": "#portal",
                    "description": "The portal associated with this user."
                },
                "personId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the person associated with this user."
                },
                "person": {
                    "$ref": "#person",
                    "description": "The person associated with this user."
                },
                "roles": {
                    "type": "array",
                    "description": "A list of roles assigned to the user.",
                    "items": {
                        "$ref": "#role"
                    },
                    "additionalItems": false
                },
                "permissions": {
                    "type": "array",
                    "description": "A list of permissions derived from the roles assigned to the user.",
                    "items": {
                        "$ref": "#permission"
                    },
                    "additionalItems": false
                },
                "type": {
                    "type": "string",
                    "description": "The user type of the user.",
                    "enum": [ "master", "client", "customer" ]
                },
                "accountEmailAddress": {
                    "type": "string",
                    "format": "email",
                    "description": "The account email address associated with the user."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Represents whether the user has been disabled."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "personId",
                "type",
                "disabled"
            ],
            "additionalProperties": false
        },

        "role": {
            "$id": "#role",
            "type": "object",
            "description": "A role that can be assigned to a user.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The role ID (UUID) of the role."
                },
                "name": {
                    "type": "string",
                    "description": "The role name of the role."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the role, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the role, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the role, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the role, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the role.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the role.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the role, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the role, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedLocalDate": {
                    "type": "string",
                    "description": "The local last modified date of the role, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedLocalTime": {
                    "type": "string",
                    "description": "The local last modified time of the role, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the role.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the role.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this role."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this role."
                },
                "organisationId": {
                    "type": "string",
                    "description": "The ID of the organisation associated with this role."
                },
                "organisation": {
                    "$ref": "#tenant",
                    "description": "The organisation associated with this role."
                },
                "permissions": {
                    "type": "array",
                    "description": "A list of permissions assotiated with this role.",
                    "items": {
                        "$ref": "#permission"
                    },
                    "additionalItems": false
                }
            },
            "required": [
                "id",
                "name",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedLocalDate",
                "lastModifiedLocalTime",
                "lastModifiedLocalTimeZone",
                "lastModifiedLocalTimeZoneAlias",
                "tenantId",
                "organisationId"
            ],
            "additionalProperties": false
        },

        "message": {
            "$id": "#message",
            "oneOf": [
                {
                    "$ref": "#emailMessage"
                },
                {
                    "$ref": "#smsMessage"
                }
            ]
        },

        "emailMessage": {
            "$id": "#emailMessage",
            "type": "object",
            "description": "An email message object.",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type property of the email message. Must be set to 'email'.",
                    "enum": [ "email" ]
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The email ID (UUID) of the email message."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the email message, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the email message, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the email message, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the email message, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the email message.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the email message.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "sentTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The sent timestamp of the email, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "sentDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The sent datetime of the email, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "sentDate": {
                    "type": "string",
                    "description": "The local sent date of the email, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "sentTime": {
                    "type": "string",
                    "description": "The local sent time of the email, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "sentTimeZoneName": {
                    "type": "string",
                    "description": "The time zone used to determine the local sent time and date values for the email.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "sentTimeZoneAbbreviation": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local sent time and date values for the email.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this email message."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this email message."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this email message."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this email message."
                },


                // These are properties that sort of double up on the sender/recipient etc relationships. Should they be more like fromAddress, replyToAddresses, toAddresses or similar?
                "from": {
                    "type": "string",
                    "format": "email",
                    "description": "The sender email address."
                },
                "replyTo": {
                    "type": "array",
                    "description": "A list of email addresses that was used as the reply-to header for the email message.",
                    "items": {
                        "type": "string",
                        "format": "email",
                        "description": "An email address."
                    },
                    "additionalItems": false
                },
                "to": {
                    "type": "array",
                    "description": "A list of recipient email addresses.",
                    "items": {
                        "type": "string",
                        "format": "email",
                        "description": "An email address."
                    },
                    "additionalItems": false
                },
                "cc": {
                    "type": "array",
                    "description": "A list of cc email addresses.",
                    "items": {
                        "type": "string",
                        "format": "email",
                        "description": "An email address."
                    },
                    "additionalItems": false
                },
                "bcc": {
                    "type": "array",
                    "description": "A list of bcc email addresses.",
                    "items": {
                        "type": "string",
                        "format": "email",
                        "description": "An email address."
                    },
                    "additionalItems": false
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email."
                },
                "textBody": {
                    "type": "string",
                    "description": "The text-only version of the email body."
                },
                "htmlBody": {
                    "type": "string",
                    "description": "The html version of the email body."
                },
                "comments": {
                    "type": "string",
                    "description": "Comes from the 'comments' header of the email as per RFC5322."
                },
                "keywords": {
                    "type": "array",
                    "description": "Comes from the 'keywords' header of the email as per RFC5322.",
                    "items": {
                        "type": "string",
                        "description": "a keyword associated with the email content."
                    },
                    "additionalItems": false
                },
                "headers": {
                    "type": "object",
                    "description": "All the headers from the email.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "attachments": {
                    "type": "array",
                    "description": "A list of file attachments for the email.",
                    "items": {
                        "$ref": "#file"
                    },
                    "additionalItems": false
                },
                "tags": {
                    "type": "array",
                    "description": "A list of tags for the email message.",
                    "items": {
                        "$ref": "#tag"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the email message.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this email is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "sentTicksSinceEpoch",
                "sentDateTime",
                "sentLocalDate",
                "sentLocalTime",
                "sentLocalTimeZone",
                "sentLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "to",
                "from",
                "textBody"
            ],
            "additionalProperties": false
        },

        "smsMessage": {
            "$id": "#smsMessage",
            "type": "object",
            "description": "An SMS message object.",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type property of the SMS message. Must be set to 'sms'.",
                    "enum": [ "sms" ]
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The email ID (UUID) of the SMS message."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the SMS message, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the SMS message, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the SMS message, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the SMS message, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the SMS message.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the SMS message.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "sentTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The sent timestamp of the SMS message, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "sentDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The sent datetime of the SMS message, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "sentLocalDate": {
                    "type": "string",
                    "description": "The local sent date of the SMS message, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "sentLocalTime": {
                    "type": "string",
                    "description": "The local sent time of the SMS message, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "sentLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local sent time and date values for the SMS message.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "sentLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local sent time and date values for the SMS message.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this SMS message."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this SMS message."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this SMS message."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this SMS message."
                },
                "from": {
                    "type": "string",
                    "description": "A phone number."
                },
                "to": {
                    "type": "array",
                    "description": "A list of recipient phone numbers.",
                    "items": {
                        "type": "string",
                        "description": "A phone number."
                    },
                    "additionalItems": false
                },
                "content": {
                    "type": "string",
                    "description": "The content of the SMS message."
                },
                "tags": {
                    "type": "array",
                    "description": "A list of tags for the SMS message.",
                    "items": {
                        "$ref": "#tag"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the SMS message.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this SMS message is tagged as test data."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "sentTicksSinceEpoch",
                "sentDateTime",
                "sentLocalDate",
                "sentLocalTime",
                "sentLocalTimeZone",
                "sentLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "to",
                "content"
            ],
            "additionalProperties": false
        },


        "event": {
            "$id": "#event",
            "type": "object",
            "description": "An event object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the event."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the event, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the event, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdDate": {
                    "type": "string",
                    "description": "The local created date of the event, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdTime": {
                    "type": "string",
                    "description": "The local created time of the event, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdTimeZoneName": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the event.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdTimeZoneAbbreviation": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the event.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "expiryTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The expiry timestamp of the event, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "expiryDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The expiry datetime of the event, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "expiryDate": {
                    "type": "string",
                    "description": "The local expiry date of the event, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "expiryTime": {
                    "type": "string",
                    "description": "The local expiry time of the event, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "expiryTimeZoneName": {
                    "type": "string",
                    "description": "The time zone used to determine the local expiry time and date values for the event.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "expiryTimeZoneAbbreviation": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local expiry time and date values for the event.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this event."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this event."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this event."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this event."
                },
                "entityType": {
                    "$ref": "#entityType",
                    "description": "The entity type of the entity associated with the event."
                },
                "entityId": {
                    "type": "string",
                    "format": "UUID",
                    "description": "The GUID of the entity associated with the event."
                },
                "entity": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An object representation of the entity associated with the event."
                },
                "eventType": {
                    "$ref": "#eventType",
                    "description": "The event type of the event."
                },
                "customEventAlias": {
                    "$ref": "#camelCaseAlias",
                    "description": "The event alias of the event.",
                    "examples": [ "myCustomEventAlias" ]
                },
                "eventData": {
                    "type": "object",
                    "description": "The event data that was persisted with the event, if applicable.",
                    "additionalProperties": true
                },
                "tags": {
                    "type": "array",
                    "description": "A list of tags for the event.",
                    "items": {
                        "$ref": "#tag"
                    },
                    "additionalItems": false
                },
                "relationships": {
                    "type": "array",
                    "description": "A list of relationships for the event.",
                    "items": {
                        "$ref": "#relationship"
                    },
                    "additionalItems": false
                }
            },
            "required": [
              "id",
              "createdTicksSinceEpoch",
              "createdDateTime",
              "createdDate",
              "createdTime",
              "createdTimeZoneName",
              "createdTimeZoneAbbreviation",
              "tenantId",
              "eventType",
              "eventData"
            ]
        },

        "file": {
            "$id": "#file",
            "type": "object",
            "description": "A file object.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The file ID (UUID) of the file."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the file, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the file, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdLocalDate": {
                    "type": "string",
                    "description": "The local created date of the file, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdLocalTime": {
                    "type": "string",
                    "description": "The local created time of the file, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdLocalTimeZone": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the file.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdLocalTimeZoneAlias": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the file.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant associated with this file."
                },
                "tenant": {
                    "$ref": "#tenant",
                    "description": "The tenant associated with this file."
                },
                "organisationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the organisation associated with this file."
                },
                "organisation": {
                    "$ref": "#organisation",
                    "description": "The organisation associated with this file."
                },
                "fileName": {
                    "type": "string",
                    "description": "The filename of the file."
                },
                "fileSizeBytes": {
                    "type": "integer",
                    "description": "The file size in bytes."
                },
                "fileSizeString": {
                    "type": "string",
                    "description": "A string representation of the file size property. E.g. 283KB or 1.3MB"
                },
                "downloadUrl": {
                    "type": "string",
                    "description": "A URL that can be used to download the file if the user has the right permissions."
                },
                "contentId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID (UUID) of the content associated with this file."
                },
                "content": {
                    "type": "string",
                    "description": "The content of the file. If the file is binary then the content is Base64 encoded."
                },
                "testData": {
                    "type": "boolean",
                    "description": "True if this refund is tagged as test data."
                }
                /*
                  "tags": {
                      "type": "array",
                      "description": "A list of tags for the file.",
                      "items": {
                          "$ref": "#tag"
                      },
                      "additionalItems": false
                  },
                  "relationships": {
                      "type": "array",
                      "description": "A list of relationships for the file.",
                      "items": {
                          "$ref": "#relationship"
                      },
                      "additionalItems": false
                  }
                  */
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdLocalDate",
                "createdLocalTime",
                "createdLocalTimeZone",
                "createdLocalTimeZoneAlias",
                "tenantId",
                "organisationId",
                "fileName",
                "fileSizeBytes",
                "fileSizeString",
                "downloadUrl",
                "contentId"
            ],
            "additionalProperties": false
        },

        "tag": {
            "$id": "#tag",
            "type": "string",
            "description": "A tag that can be set on an entity."
        },

        "relationship": {
            "$id": "#relationship",
            "type": "object",
            "description": "A relationship object.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the relationship.",
                    "examples": [ "Email Recipient" ]
                },
                "alias": {
                    "$ref": "#camelCaseAlias",
                    "description": "The alias of the relationship.",
                    "examples": [ "emailRecipient" ]
                },
                "sourceEntityLabelSingular": {
                    "type": "string",
                    "description": "The singular label for the source entity in the relationship.",
                    "examples": [ "recipient" ]
                },
                "sourceEntityLabelPlural": {
                    "type": "string",
                    "description": "The plural label for the source entity in the relationship.",
                    "examples": [ "recipients" ]
                },
                "sourceEntityDescription": {
                    "type": "string",
                    "description": "The description for the source entity in the relationship.",
                    "examples": [ "was sent to" ]
                },
                "sourceEntityType": {
                    "type": "string",
                    "enum": [ "tenant", "organisation", "product", "user", "customer", "quote", "quoteVersion", "policy", "policyTransaction", "claim", "claimVersion", "email", "document" ],
                    "description": "The entity type of the entity that is the source entity in this relationship."
                },
                "sourceEntityId": {
                    "type": "string",
                    "format": "UUID",
                    "description": "The GUID of the entity that is the source entity in this relationship."
                },
                // DISCUSS - this would be a case of "includeRelatedEntitites"
                "sourceEntity": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An object representation of the entity that is the source entity in this relationship."
                },
                "targetEntityLabelSingular": {
                    "type": "string",
                    "description": "The singular label for the source entity in the relationship.",
                    "examples": [ "recipient" ]
                },
                "targetEntityLabelPlural": {
                    "type": "string",
                    "description": "The plural label for the source entity in the relationship.",
                    "examples": [ "recipients" ]
                },
                "targetEntityDescription": {
                    "type": "string",
                    "description": "The description for the source entity in the relationship.",
                    "examples": [ "was sent to" ]
                },
                "targetEntityType": {
                    "type": "string",
                    "enum": [ "tenant", "organisation", "product", "user", "customer", "quote", "quoteVersion", "policy", "policyTransaction", "claim", "claimVersion", "email", "document" ],
                    "description": "The entity type of the entity that is the target entity in this relationship."
                },
                "targetEntityId": {
                    "type": "string",
                    "format": "UUID",
                    "description": "The GUID of the entity that is the target entity in this relationship."
                },
                // DISCUSS - this would be a case of "includeRelatedEntitites"
                "targetEntity": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An object representation of the entity that is the target entity in this relationship."
                }
                /*
                  "otherEntityType": {
                      "type": "string",
                      "enum": [ "tenant", "organisation", "product", "user", "customer", "quote", "quoteVersion", "policy", "policyTransaction", "claim", "claimVersion", "email", "document" ]
                  },
                  "tenantId": {
                      "type": "string",
                      "description": "The ID of the tenant that is the other entity in this relationship."
                  },
                  "tenant": {
                      "$ref": "#tenant",
                      "description": "The tenant that is the other entity in this relationship."
                  },
                  "organisationId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the organisation that is the other entity in this relationship."
                  },
                  "organisation": {
                      "$ref": "#organisation",
                      "description": "The organisation that is the other entity in this relationship."
                  },
                  "productId": {
                      "type": "string",
                      "description": "The ID of the product that is the other entity in this relationship."
                  },
                  "product": {
                      "$ref": "#product",
                      "description": "The product that is the other entity in this relationship."
                  },
                  "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the user that is the other entity in this relationship."
                  },
                  "user": {
                      "$ref": "#user",
                      "description": "The user that is the other entity in this relationship."
                  },
                  "customerId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the customer that is the other entity in this relationship."
                  },
                  "customer": {
                      "$ref": "#customer",
                      "description": "The customer that is the other entity in this relationship."
                  },
                  "quoteId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the quote that is the other entity in this relationship."
                  },
                  "quote": {
                      "$ref": "#quote",
                      "description": "The quote that is the other entity in this relationship."
                  },
                  "quoteVersionId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the quote version that is the other entity in this relationship."
                  },
                  "quoteVersion": {
                      "$ref": "#quoteVersion",
                      "description": "The quote version that is the other entity in this relationship."
                  },
                  "policyId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the policy that is the other entity in this relationship."
                  },
                  "policy": {
                      "$ref": "#policy",
                      "description": "The policy that is the other entity in this relationship."
                  },
                  "policyTransactionId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the policy transaction that is the other entity in this relationship."
                  },
                  "policyTransaction": {
                      "$ref": "#policyTransaction",
                      "description": "The policy transaction that is the other entity in this relationship."
                  },

                  "claimId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the claim that is the other entity in this relationship."
                  },
                  "claim": {
                      "$ref": "#claim",
                      "description": "The claim that is the other entity in this relationship."
                  },
                  "claimVersionId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the claim version that is the other entity in this relationship."
                  },
                  "claimVersion": {
                      "$ref": "#claimVersion",
                      "description": "The claim version that is the other entity in this relationship."
                  },
                  "emailId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the email that is the other entity in this relationship."
                  },
                  "email": {
                      "$ref": "#email",
                      "description": "The email that is the other entity in this relationship."
                  },
                  "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID (UUID) of the document that is the other entity in this relationship."
                  },
                  "document": {
                      "$ref": "#file",
                      "description": "The document that is the other entity in this relationship."
                  }
                  */
            },
            "required": [
                "name",
                "alias",
                "sourceEntityLabelSingular",
                "sourceEntityLabelPlural",
                "sourceEntityDescription",
                "sourceEntityType",
                "sourceEntityId",
                "targetEntityLabelSingular",
                "targetEntityLabelPlural",
                "targetEntityDescription",
                "targetEntityType",
                "targetEntityId"
            ],
            "additionalProperties": false
        },

        "paymentMethod": {
            "$id": "#paymentMethod",
            "type": "object",
            "description": "A payment method.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The file ID (UUID) of the payment method."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the payment method.",
                    "examples": [ "Zai Card Payment" ]
                },
                "alias": {
                    "$ref": "#camelCaseAlias",
                    "description": "The alias of the payment method.",
                    "examples": [ "zaiCardPayment" ]
                }
            },
            "required": [
                "id",
                "name",
                "alias"
            ],
            "additionalProperties": false
        },

        "customerPaymentMethod": {
            "$id": "#customerPaymentMethod",
            "type": "object",
            "description": "A customer payment method.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The file ID (UUID) of the customer payment method."
                },
                "createdTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The created timestamp of the customer payment method, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The created datetime of the customer payment method, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "createdDate": {
                    "type": "string",
                    "description": "The local created date of the customer payment method, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "createdTime": {
                    "type": "string",
                    "description": "The local created time of the customer payment method, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "createdTimeZoneName": {
                    "type": "string",
                    "description": "The time zone used to determine the local creation time and date values for the customer payment method.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "createdTimeZoneAbbreviation": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local creation time and date values for the customer payment method.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "lastModifiedTicksSinceEpoch": {
                    "type": "integer",
                    "description": "The last modified timestamp of the customer payment method, represented as a ticks since epoch integer value.",
                    "examples": [ 1582532584813, 1610683682000 ]
                },
                "lastModifiedDateTime": {
                    "type": "string",
                    "format": "datetime",
                    "description": "The last modified datetime of the customer payment method, represented as an ISO-8601 formated datetime string.",
                    "examples": [ "2021-01-15T04:08:02.000+00:00" ]
                },
                "lastModifiedDate": {
                    "type": "string",
                    "description": "The local last modified date of the customer payment method, localised based on a time zone denomination (to determine the local date value from the associated timestamp) and represented as a string formatted using the date pattern 'd MMM yyyy'.",
                    "examples": [ "1 Jan 2020", "23 Oct 2021" ]
                },
                "lastModifiedTime": {
                    "type": "string",
                    "description": "The local last modified time of the customer payment method, represented as a short-time string value, localised based on a time zone denomination (to determine the local time value from the associated timestamp) and a (potentially different) locale reference (for specifying the string formatting).",
                    "examples": [ "8:23 pm", "20:23" ]
                },
                "lastModifiedTimeZoneName": {
                    "type": "string",
                    "description": "The time zone used to determine the local last modified time and date values for the customer payment method.",
                    "examples": [ "Australian Eastern Daylight Time", "Australian Eastern Standard Time", "Atlantic Standard Time" ]
                },
                "lastModifiedTimeZoneAbbreviation": {
                    "type": "string",
                    "description": "The abbreviation of the time zone used to determine the local last modified time and date values for the customer payment method.",
                    "examples": [ "AEDT", "AEST", "AST" ]
                },
                "paymentMethodId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The payment method ID of the payment method associated with this customer payment method."
                },
                "paymentMethod": {
                    "$ref": "#paymentMethod",
                    "description": "The payment method associated with this customer payment method."
                },
                "cardDetails": {
                    "$ref": "#cardDetails",
                    "description": "The card details associated with the payment method."
                }
            },
            "required": [
                "id",
                "createdTicksSinceEpoch",
                "createdDateTime",
                "createdDate",
                "createdTime",
                "createdTimeZoneName",
                "createdTimeZoneAbbreviation",
                "lastModifiedTicksSinceEpoch",
                "lastModifiedDateTime",
                "lastModifiedDate",
                "lastModifiedTime",
                "lastModifiedTimeZoneName",
                "lastModifiedTimeZoneAbbreviation",
                "paymentMethodId",
                "cardDetails"
            ],
            "additionalProperties": false
        },


        "cardDetails": {
            "$id": "#cardDetails",
            "type": "object",
            "description": "The details of a payment card.",
            "properties": {
                "expiryYear": {
                    "type": "integer",
                    "description": "The expiry year of the card.",
                    "examples": [ 2023 ]
                },
                "expiryMonth": {
                    "type": "integer",
                    "description": "The expiry month of the card.",
                    "examples": [ 5, 10 ]
                },
                "expired": {
                    "type": "boolean",
                    "description": "True if the card has expired, otherwise false.",
                    "examples": [ true, false ]
                },
                "cardHolderName": {
                    "type": "string",
                    "description": "The name of the card holser of the card.",
                    "examples": [ "J. Smith", "Bill Roberts" ]
                },
                "cardType": {
                    "type": "string",
                    "description": "The card type of the card.",
                    "examples": [ "Visa", "MasterCard" ]
                },
                "maskedCardNumber": {
                    "type": "string",
                    "description": "The masked card number of the card, formatted with correct number spacing and revealing the last 4 card digits.",
                    "examples": [ "**** **** **** 4332" ]
                }
            },
            "required": [
                "expiryYear",
                "expiryMonth",
                "expired",
                "cardHolderName",
                "cardType",
                "maskedCardNumber"
            ],
            "additionalProperties": false
        },

        "quoteCalculation": {
            "$id": "#quoteCalculation",
            "type": "object",
            "description": "The output of a quotecalculation.",
            "properties": {
                "state": {
                    "type": "string",
                    "description": "The calculation state.",
                    "enum": [ "incomplete", "premiumEstimate", "premiumComplete", "bindingQuote" ]
                },
                "questions": {
                    "$ref": "#formData",
                    "description": "The questions and answers used as input factors in the calculation."
                },
                "triggers": {
                    "type": "object",
                    "description": "A list of triggers that are part of the calculation output.",
                    "additionalProperties": {
                        "$ref": "#triggerType"
                    }
                },
                "risks": {
                    "type": "array",
                    "description": "A list of risks that contribute to the total price of a policy transaction.",
                    "items": {
                        "$ref": "#risk"
                    },
                    "additionalItema": false
                },
                "payment": {
                    "type": "object",
                    "description": "",
                    "properties": {
                        "priceComponents": {
                            "$ref": "#premiumBreakdown",
                            "description": "A breakdown of the price calculated for the full term of a policy."
                        },
                        "payableComponents": {
                            "$ref": "#premiumBreakdown",
                            "description": "A breakdown of the amount the customer needs to pay for a particular policy transaction. This includes the pro rata calculation applied to mid-term adjustment transactions."
                        },
                        "refundComponents": {
                            "$ref": "#premiumBreakdown",
                            "description": "A breakdown of the amount refundable in the case of a transaction where the payable amount is negative. These values are used if a refundable amount needs to be merged into a template."
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
		
       "quoteCalculationFormatted": {
            "$id": "#quoteCalculationFormatted",
            "type": "object",
            "description": "The output of a quotecalculation that has been formatted.",
            "properties": {
                "state": {
                    "type": "string",
                    "description": "The calculation state.",
                    "enum": [ "incomplete", "premiumEstimate", "premiumComplete", "bindingQuote" ]
                },
                "triggers": {
                    "type": "object",
                    "description": "A list of triggers that are part of the calculation output.",
                    "additionalProperties": {
                        "$ref": "#triggerType"
                    }
                },
                "risks": {
                    "type": "array",
                    "description": "A list of risks that contribute to the total price of a policy transaction.",
                    "items": {
                        "$ref": "#risk"
                    },
                    "additionalItema": false
                },
                "payment": {
                    "type": "object",
                    "description": "",
                    "properties": {
                        "priceComponents": {
                            "$ref": "#premiumBreakdownFormatted",
                            "description": "A formatted breakdown of the price calculated for the full term of a policy."
                        },
                        "payableComponents": {
                            "$ref": "#premiumBreakdownFormatted",
                            "description": "A formatted breakdown of the amount the customer needs to pay for a particular policy transaction. This includes the pro rata calculation applied to mid-term adjustment transactions."
                        },
                        "refundComponents": {
                            "$ref": "#premiumBreakdownFormatted",
                            "description": "A formatted breakdown of the amount refundable in the case of a transaction where the payable amount is negative. These values are used if a refundable amount needs to be merged into a template."
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },

        "claimCalculation": {
            "$id": "#claimCalculation",
            "type": "object",
            "description": "The output of a claim calculation.",
            "properties": {
                "state": {
                    "type": "string",
                    "description": "The calculation state.",
                    "enum": [ "incomplete", "premiumEstimate", "premiumComplete", "bindingQuote" ] // DISCUSS - this should be revised, but what should they be?
                },
                "questions": { // DISCUSS - are we removing questions from calculation output?
                    "$ref": "#formData",
                    "description": "The questions and answers used as input factors in the calculation."
                },
                "triggers": {
                    "type": "object",
                    "description": "A list of triggers that are part of the calculation output.",
                    "additionalProperties": {
                        "$ref": "#triggerType"
                    }
                }
            },
            "additionalProperties": false
        },
		
        "claimCalculationFormatted": {
            "$id": "#claimCalculationFormatted",
            "type": "object",
            "description": "The formatted output of a claim calculation.",
            "properties": {
                "state": {
                    "type": "string",
                    "description": "The calculation state.",
                    "enum": [ "incomplete", "premiumEstimate", "premiumComplete", "bindingQuote" ] // DISCUSS - this should be revised, but what should they be?
                },
                "triggers": {
                    "type": "object",
                    "description": "A list of triggers that are part of the calculation output.",
                    "additionalProperties": {
                        "$ref": "#triggerType"
                    }
                }
            },
            "additionalProperties": false
        },

        "triggerType": {
            "$id": "#triggerType",
            "type": "object",
            "description": "A category of triggers that is part of a calculation output.",
            "additionalProperties": {
                "$ref": "#trigger"
            }
        },

        "trigger": {
            "$id": "#trigger",
            "type": "boolean",
            "description": "A trigger that is part of a calculation output."
        },

        "risk": {
            "$id": "#risk",
            "type": "object",
            "description": "A risk that contributes to the total price of a policy transaction.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A name of the risk, e.g. Professional Indemnity, Public Liablity, Property etc."
                },
                "ratingFactors": {
                    "type": "object",
                    "description": "A list of the rating factors that are used to calculate the premium for this risk.",
                    "additionalProperties": {
                        "$ref": "#anyValue"
                    }
                },
                "checks": {
                    "type": "object",
                    "description": "A list of boolean check conditions.",
                    "additionalProperties": {
                        "$ref": "#booleanValue",
                        "description": "The value of a check condition"
                    }
                },
                "premium": {
                    "type": "object",
                    "description": "The base premium associated with this risk, as well as the currency values of the calculation steps used to calculate it.",
                    "properties": {
                        "basePremium": {
                            "$ref": "#currencyValue",
                            "description": "The base premium associated with this risk."
                        },
                        "loadedPremium": {
                            "$ref": "#currencyValue",
                            "description": "The loaded premium associated with this risk." // discuss this. The loadedPremium from the risk calculation basically is equivalent to the baseCalculation in the priceComponents, not ideal
                        },
                        "premiumPercentAct": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of ACT."
                        },
                        "premiumPercentNsw": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of NSW."
                        },
                        "premiumPercentNt": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of NT."
                        },
                        "premiumPercentQld": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of QLD."
                        },
                        "premiumPercentSa": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of SA."
                        },
                        "premiumPercentTas": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of TAS."
                        },
                        "premiumPercentVic": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of VIC."
                        },
                        "premiumPercentWa": {
                            "$ref": "#percentageValue",
                            "description": "The percentage of the premium that is attributable to the state of WA."
                        }
                    },
                    "required": [ "basePremium" ], // DISUSS - to support older workbooks, and even some new ones, this would have to be a free for all
                    "additionalProperties": {
                        "$ref": "#currencyValue",
                        "description": "A list of the currency values of the calculation steps used to calculate the base premium."
                    }
                },
                "other": {
                    "type": "object",
                    "description": "A list of custom values used as part of the risk calculation.",
                    "additionalProperties": {
                        "$ref": "#anyValue",
                        "description": "The value for a custom part of the risk calculation."
                    }
                },
                "statutoryRates": {
                    "type": "object",
                    "description": "Defines the statutory rates applicable to the risk.",
                    "properties": {
                        "riskType": {
                            "type": "string",
                            "description": "The risk type of the risk.",
                            "enum": [ "general", "publicLiability", "professionalIndemnity", "motor", "farm" ]
                        },
                        "eslApplicable": { // should this be boolean?
                            "$ref": "#booleanValue",
                            "description": "Defines whether NSW emergency services levy applies to this risk."
                        },
                        "eslRate": {
                            "$ref": "#percentageValue",
                            "description": "The rate of ESL that applies to this risk."
                        },
                        "gstRate": {
                            "$ref": "#percentageValue",
                            "description": "The rate of GST that applies to this risk."
                        },
                        "stampDutyRateAct": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of ACT."
                        },
                        "stampDutyRateNsw": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of NSW."
                        },
                        "stampDutyRateNt": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of NT."
                        },
                        "stampDutyRateQld": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of QLD."
                        },
                        "stampDutyRateSa": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of SA."
                        },
                        "stampDutyRateTas": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of TAS."
                        },
                        "stampDutyRateVic": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of VIC."
                        },
                        "stampDutyRateWa": {
                            "$ref": "#percentageValue",
                            "description": "The rate of stamp duty that applies to the proportion of the premium associated with this risk that is attributed to the state of WA."
                        }
                    },
                    "additionalProperties": false
                },
                "payment": {
                    "$ref": "#premiumBreakdown",
                    "description": "Defines the payable components applicable to the risk."
                }
            },
            "required": [ "name", "ratingFactors", "checks", "premium", "other", "statutoryRates", "payment" ], // should some of these sections be optional so that the same object can be used for claims?
            "additionalItems": false
        },

        "premiumBreakdown": {
            "$id": "#premiumBreakdown",
            "type": "object",
            "description": "A premium breakdown object.",
            "properties": {
                "basePremium": {
                    "$ref": "#currencyValue",
                    "description": "The calculated premium for the risk, including the commission component."
                },
                "terrorismPremium": {
                    "$ref": "#currencyValue",
                    "description": "The calculated terrorism premium."
                },
                "emergencyServicesLevyNsw": {
                    "$ref": "#currencyValue",
                    "description": "The emergency services levy for NSW, if applicable."
                },
                "emergencyServicesLevyTotal": {
                    "$ref": "#currencyValue",
                    "description": "The emergency services levy for TAS, if applicable."
                },
                "esl": {
                    "$ref": "#currencyValue",
                    "description": "The terrorism premium."
                },
                "premiumGst": {
                    "$ref": "#currencyValue", 
                    "description": "The GST amount for the Total Premium."
                },
                "stampDutyAct": {
                    "$ref": "#currencyValue",
                    "description": "The Stamp Duty applicable to the state of ACT."
                },
                "stampDutyNsw": {
                    "$ref": "#currencyValue",
                    "description": "The Stamp Duty applicable to the state of NSW."
                },
                "stampDutyNt": {
                    "$ref": "#currencyValue",
                    "description": "The Stamp Duty applicable to the state of NT."
                },
                "stampDutyQld": {
                    "$ref": "#currencyValue", 
                    "description": "The Stamp Duty applicable to the state of QLD."
                },
                "stampDutySa": {
                    "$ref": "#currencyValue",
                    "description": "The Stamp Duty applicable to the state of SA."
                },
                "stampDutyTas": {
                    "$ref": "#currencyValue",
                    "description": "The Stamp Duty applicable to the state of TAS."
                },
                "stampDutyVic": {
                    "$ref": "#currencyValue", 
                    "description": "The Stamp Duty applicable to the state of VIC."
                },
                "stampDutyWa": {
                    "$ref": "#currencyValue",
                    "description": "The Stamp Duty applicable to the state of WA."
                },
                "stampDutyTotal": {
                    "$ref": "#currencyValue",
                    "description": "The total Stamp Duty. Calculated as the sum of the Stamp Duty for all of the individual states."
                },
                "totalPremium": {
                    "$ref": "#currencyValue",
                    "description": "Base Premium + Terrorism Premium + Emergency Services Levy Total + Premium GST + Stamp Duty Total."
                }
            },
            "required": [
                "basePremium",
                "terrorismPremium",
                "emergencyServicesLevyNsw",
                "emergencyServicesLevyTas",
                "emergencyServicesLevyTotal",
                "premiumGst",
                "stampDutyAct",
                "stampDutyNsw",
                "stampDutyNt",
                "stampDutyQld",
                "stampDutySa",
                "stampDutyTas",
                "stampDutyVic",
                "stampDutyWa",
                "stampDutyTotal",
                "totalPremium"
            ],
            "additionalProperties": false
        },

        "premiumBreakdownFormatted": {
            "$id": "#premiumBreakdownFormatted",
            "type": "object",
            "description": "A formatted premium breakdown object.",
            "properties": {
                "basePremium": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The calculated premium for the risk, including the commission component."
                },
                "terrorismPremium": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The terrorism premium."
                },
                "emergencyServicesLevyNsw": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The Emergency Services Levy applicable to the state of NSW."
                },
                "emergencyServicesLevyTas": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The Emergency Services Levy applicable to the state of TAS."
                },
                "emergencyServicesLevyTotal": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The total Emergency Services."
                },
                "premiumGst": {
                    "$ref": "#currencyValueFormatted", 
                    "description": "The GST amount for the Total Premium."
                },
                "stampDutyAct": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The Stamp Duty applicable to the state of ACT."
                },
                "stampDutyNsw": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The Stamp Duty applicable to the state of NSW."
                },
                "stampDutyNt": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The Stamp Duty applicable to the state of NT."
                },
                "stampDutyQld": {
                    "$ref": "#currencyValueFormatted", 
                    "description": "The Stamp Duty applicable to the state of QLD."
                },
                "stampDutySa": {
                    "$ref": "#currencyValueFormatted",
                    "description": "The Stamp Duty applicable to the state of SA."
                },
                "roadsideAssistanceFee": {
                    "$ref": "#currencyValue",
                    "description": "Optional fee charged for roadside assistance."
                },
                "roadsideAssistanceFeeGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the roadside assistance fee if applicable."
                },
                "policyFee": {
                    "$ref": "#currencyValue",
                    "description": "Optional fee charged for the policy."
                },
                "policyFeeGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the policy fee if applicable."
                },
                "partnerFee": {
                    "$ref": "#currencyValue",
                    "description": "Optional fee charged for partners."
                },
                "partnerFeeGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the partner fee if applicable."
                },
                "administrationFee": {
                    "$ref": "#currencyValue",
                    "description": "Optional fee charged for administration costs."
                },
                "administrationFeeGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the administration fee if applicable."
                },
                "establishmentFee": {
                    "$ref": "#currencyValue",
                    "description": "Optional fee charged for establishment costs."
                },
                "establishmentFeeGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the establishment fee if applicable."
                },
                "interestCharges": {
                    "$ref": "#currencyValue",
                    "description": "Interest charges if applicable, e.g. if monthly instalments are offered."
                },
                "interestGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the interest charges if applicable."
                },
                "merchantFees": {
                    "$ref": "#currencyValue",
                    "description": "Merchant service fees from credit card interchange if applicable."
                },
                "merchantFeesGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the merchant fees if applicable."
                },
                "transactionCosts": {
                    "$ref": "#currencyValue",
                    "description": "Per transaction charges if applicable, e.g. from the payment gateway provider."
                },
                "transactionCostsGST": {
                    "$ref": "#currencyValue",
                    "description": "The GST on the transaction costs if applicable."
                },
                "totalGst": {
                    "$ref": "#currencyValue",
                    "description": "The combined total of all GST components (excl. the commission GST, because it's part of the Premium GST)."
                },
                "totalPremium": {
                    "$ref": "#currencyValueFormatted",
                    "description": "Base Premium + Terrorism Premium + Emergency Services Levy Total + Premium GST + Stamp Duty Total."
                }
            },
            "required": [
                "basePremium",
                "terrorismPremium",
                "emergencyServicesLevyNsw",
                "emergencyServicesLevyTas",
                "emergencyServicesLevyTotal",
                "premiumGst",
                "stampDutyAct",
                "stampDutyNsw",
                "stampDutyNt",
                "stampDutyQld",
                "stampDutySa",
                "stampDutyTas",
                "stampDutyVic",
                "stampDutyWa",
                "stampDutyTotal",
                "totalPremium"
            ],
            "additionalProperties": false
        },

        "stringValue": {
            "$id": "#stringValue",
            "type": "string",
            "description": "A string value, e.g. a state or occupation selection",
            "examples": [ "VIC", "Antenna Installer" ]
        },

        "currencyValue": {
            "$id": "#currencyValue",
            "type": "number",
            "description": "A currency value",
            "examples": [ 1000.00, -45.67, 0.2532342 ]
        },

        "currencyValueFormatted": {
            "$id": "#currencyValueFormatted",
            "type": "string",
            "pattern": "^\\-?[\\$\\�\\�\\�]([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]{1,3})(.[0-9][0-9])?$",
            "description": "A currency value formatted as a string",
            "examples": [ "$12,000", "-$45.67", "�0.25" ]
        },

        "currencyValueOrFormatted": {
            "$id": "#currencyValueOrFormatted",
            "description": "A currency value, either formatted as a currency value or as a currency string value.",
            "oneOf": [
                { "$ref": "#currencyValue" },
                { "$ref": "#currencyValueFormatted" }
            ],
            "examples": [ 1000.00, "$1,000.00" ]
        },

        "numberValue": {
            "$id": "#numberValue",
            "type": "number",
            "description": "A numeric value",
            "examples": [ 0.14, -100000 ]
        },

        "percentageValue": {
            "$id": "#percentageValue",
            "type": "number",
            "minimum": -1,
            "maximum": 1,
            "description": "A percentage value",
            "examples": [ 0.1, -0.876 ]
        },

        "integerValue": {
            "$id": "#integerValue",
            "type": "integer",
            "description": "An integer value",
            "examples": [ 1, 55, -100000 ]
        },

        "booleanValue": {
            "$id": "#booleanValue",
            "type": "boolean",
            "description": "A boolean value",
            "examples": [ true, false ]
        },

        "anyValue": {
            "$id": "#anyValue",
            "description": "A value used in a calculation.",
            "anyOf": [
                { "$ref": "#stringValue" },
                { "$ref": "#currencyValue" },
                { "$ref": "#numberValue" },
                { "$ref": "#percentageValue" },
                { "$ref": "#integerValue" },
                { "$ref": "#booleanValue" }
            ]
        },

        "formData": {
            "$id": "#formData",
            "type": "object",
            "description": "A set of form data collected by a form.",
            "additionalProperties": {
                "$ref": "#questionSet",
                "description": "A question set that is part of the form data."
            }
        },

        "questionSet": {
            "$id": "#questionSet",
            "type": "object",
            "description": "A set of questions that are part of form data.",
            "additionalProperties": {
                "$ref": "#question",
                "description": "A question that is part of the question set."
            }
        },

        "question": {
            "$id": "#question",
            "description": "A question that is part of a question set.",
            "oneOf": [
                {
                    "$ref": "#anyValue",
                    "description": "The answer to a single question."
                },
                {
                    "type": "array",
                    "description": "A repeating question set.",
                    "items": {
                        "$ref": "#questionSet",
                        "description": "A repeating instance of a question set ."
                    },
                    "additionalProperties": false
                }
            ]
        },

        "permission": {
            "$id": "#permission",
            "type": "object",
            "description": "A permission associated with a role.",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The permission type of the permission.",
                    "enum": [
                        "ViewMyAccount",
                        "EditMyAccount",
                        "ViewUsers",
                        "ViewUsersFromAllOrganisations",
                        "ManageUsers",
                        "ManageUsersForAllOrganisations",
                        "ManageTenantAdminUsers",
                        "ManageMasterAdminUsers",
                        "ViewRoles",
                        "ViewRolesFromAllOrganisations",
                        "ManageRoles",
                        "ManageRolesForAllOrganisations",
                        "ViewQuotes",
                        "ViewAllQuotes",
                        "ViewAllQuotesFromAllOrganisations",
                        "ManageQuotes",
                        "ManageAllQuotes",
                        "ManageAllQuotesForAllOrganisations",
                        "EndorseQuotes",
                        "ReviewQuotes",
                        "ExportQuotes",
                        "ViewQuoteVersions",
                        "ManageQuoteVersions",
                        "ViewPolicies",
                        "ViewAllPolicies",
                        "ViewAllPoliciesFromAllOrganisations",
                        "ManagePolicies",
                        "ManageAllPolicies",
                        "ManageAllPoliciesForAllOrganisations",
                        "ExportPolicies",
                        "ImportPolicies",
                        "ViewClaims",
                        "ViewAllClaims",
                        "ViewAllClaimsFromAllOrganisations",
                        "ManageClaims",
                        "ManageAllClaims",
                        "ManageAllClaimsForAllOrganisations",
                        "AcknowledgeClaimNotifications",
                        "ReviewClaims",
                        "AssessClaims",
                        "SettleClaims",
                        "ExportClaims",
                        "ImportClaims",
                        "ViewCustomers",
                        "ViewAllCustomers",
                        "ManageCustomers",
                        "ManageAllCustomers",
                        "ImportCustomers",
                        "ViewAdditionalProperties",
                        "EditAdditionalProperties",
                        "ManageAdditionalPropertiesDefinition",
                        "ViewEmails",
                        "ManageEmails",
                        "ViewReports",
                        "ManageReports",
                        "GenerateReports",
                        "AccessDevelopmentData",
                        "AccessStagingData",
                        "AccessProductionData",
                        "ViewTenants",
                        "ManageTenants",
                        "ViewOrganisations",
                        "ManageOrganisations",
                        "ViewProducts",
                        "ManageProducts",
                        "ViewReleases",
                        "ManageReleases",
                        "PromoteReleasestoStaging",
                        "PromoteReleasestoProduction",
                        "ViewPortals",
                        "ManagePortals",
                        "ViewBackgroundJobs",
                        "ManageBackgroundJobs",
                        "ReplayIntegrationEvents"
                    ]
                }
            },
            "required": [ "type" ],
            "additionalProperties": false
        },

        "phoneNumber": {
            "$id": "#phoneNumber",
            "type": "object",
            "description": "An phone number object.",
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "description": "The phone number."
                },
                "default": {
                    "type": "boolean",
                    "description": "Specifies whether this is the default phone number for the entity."
                },
                "label": {
                    "type": "string",
                    "description": "The label for the phone number.",
                    "enum": [ "Mobile", "Home", "Work", "Other" ]
                },
                "customLabel": {
                    "type": "string",
                    "description": "A custom label for the phone number. Required if the label value is 'Other'."
                }
            },
            "required": [ "phoneNumber", "label" ],
            "additionalProperties": false
        },


        "emailAddress": {
            "$id": "#emailAddress",
            "type": "object",
            "description": "An email address object.",
            "properties": {
                "emailAddress": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address."
                },
                "default": {
                    "type": "boolean",
                    "description": "Specifies whether this is the default email address for the entity."
                },
                "label": {
                    "type": "string",
                    "description": "A label for the email address.",
                    "enum": [ "Work", "Personal", "Other" ]
                },
                "customLabel": {
                    "type": "string",
                    "description": "A custom label for the email address. Required if the label value is 'Other'."
                }
            },
            "required": [ "emailAddress", "label" ],
            "additionalProperties": false
        },

        "streetAddress": {
            "$id": "#streetAddress",
            "type": "object",
            "description": "An street address object.",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address value."
                },
                "suburb": {
                    "type": "string",
                    "description": "The suburb value."
                },
                "state": {
                    "type": "string",
                    "description": "The state value."
                },
                "postcode": {
                    "type": "string",
                    "description": "The postcode value."
                },
                "default": {
                    "type": "boolean",
                    "description": "Specifies whether this is the default street address for the entity."
                },
                "label": {
                    "type": "string",
                    "description": "A label for the street address.",
                    "enum": [ "Home", "Work", "Postal", "Other" ]
                },
                "customLabel": {
                    "type": "string",
                    "description": "A custom label for the street address. Required if the label value is 'Other'."
                }
            },
            "required": [ "address", "suburb", "state", "postcode", "label" ],
            "additionalProperties": false
        },

        "websiteAddress": {
            "$id": "#websiteAddress",
            "type": "object",
            "description": "An website address object.",
            "properties": {
                "websiteAddress": {
                    "type": "string",
                    "description": "The website address."
                },
                "default": {
                    "type": "boolean",
                    "description": "Specifies whether this is the default website address for the entity."
                },
                "label": {
                    "type": "string",
                    "description": "A label for the website address.",
                    "enum": [ "Business", "Personal", "Other" ]
                },
                "customLabel": {
                    "type": "string",
                    "description": "A custom label for the website address. Required if the label value is 'Other'."
                }
            },
            "required": [ "websiteAddress", "label" ],
            "additionalProperties": false
        },

        "messengerId": {
            "$id": "#messengerId",
            "type": "object",
            "description": "An messenger ID object.",
            "properties": {
                "messengerId": {
                    "type": "string",
                    "description": "The messenger ID."
                },
                "default": {
                    "type": "boolean",
                    "description": "Specifies whether this is the default messenger ID for the entity."
                },
                "label": {
                    "type": "string",
                    "description": "A label for the messenger ID.",
                    "enum": [ "Skype", "WhatsApp", "Other" ]
                },
                "customLabel": {
                    "type": "string",
                    "description": "A custom label for the messenger ID. Required if the label value is 'Other'."
                }
            },
            "required": [ "messengerId", "label" ],
            "additionalProperties": false
        },

        "socialMediaId": {
            "$id": "#socialMediaId",
            "type": "object",
            "description": "An social media ID object.",
            "properties": {
                "socialMediaId": {
                    "type": "string",
                    "description": "The social media ID."
                },
                "default": {
                    "type": "boolean",
                    "description": "Specifies whether this is the default social media ID for the entity."
                },
                "label": {
                    "type": "string",
                    "description": "A label for the social media ID.",
                    "enum": [ "LinkedIn", "Twitter", "Facebook", "Instagram", "YouTube", "Other" ]
                },
                "customLabel": {
                    "type": "string",
                    "description": "A custom label for the social media ID. Required if the label value is 'Other'."
                }
            },
            "required": [ "socialMediaId", "label" ],
            "additionalProperties": false
        },

        "userAccount": {
            "$id": "userAccount",
            "type": "object",
            "description": "A user account for a user or customer.",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The login email address for the account."
                },
                "status": {
                    "type": "string",
                    "description": "The state of the user account.",
                    "enum": [ "new", "invited", "active", "disabled" ]
                },
                "activationInvitationSent": {
                    "type": "boolean",
                    "description": "Represents whether an activation invitation email has been sent."
                },
                "activated": {
                    "type": "boolean",
                    "description": "Represents whether the user account has been activated."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Represents whether the user account has been disabled."
                }
            },
            "required": [ "email", "status", "activationInvitationSent", "activated", "disabled" ],
            "additionalItems": false
        },

        "policyTransactionType": {
            "$id": "#policyTransactionType",
            "type": "string",
            "description": "The policy transaction type for a policy transaction or quote.",
            "enum": [ "newBusiness", "adjustment", "renewal", "cancellation" ]
        },

        "environment": {
            "$id": "#environment",
            "type": "string",
            "description": "The environment to which a product is deployed. If not provided, it defaults to development.",
            "enum": [ "development", "staging", "production" ],
            "default": "development"
        },

        "error": {
            "$id": "#error",
            "description": "Represents an error which has occurred within the application.",
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The error code, e.g. 'record.not.found' - we are using a string rather than an int as the error code can then convey some meaning in and of itself, yet it still must be unique."
                },
                "title": {
                    "type": "string",
                    "description": "A title for the message. This is used when the message is presented to the user in a dialog."
                },
                "message": {
                    "type": "string",
                    "description": "The error message."
                },
                "httpStatusCode": {
                    "type": "integer",
                    "description": "A HTTP Status code, e.g. 409."
                },
                "additionalDetails": {
                    "type": "array",
                    "description": "If there are additional details, they can be included here as properties with string values.",
                    "additionalItems": {
                        "type": "string"
                    }
                },
                "data": {
                    "type": "object",
                    "description": "Any additional data which you may want to pass with this error which may assist in error handling.",
                    "additionalProperties": true
                }
            },
            "required": [ "code", "title", "message", "httpStatusCode" ],
            "additionalProperties": false
        },

      "eventType": {
        "$id": "#eventType",
        "type": "string",
        "description": "The event type of an event.",
        "enum": [
          "quoteCreated",
          "newBusinessQuoteCreated",
          "adjustmentQuoteCreated",
          "renewalQuoteCreated",
          "cancellationQuoteCreated",
          "quoteActualised",
          "quoteFormDataUpdated",
          "quoteCustomerAssociated",
          "quoteCalculationResultCreated",
          "customerDetailsUpdated",
          "quoteSubmitted",
          "quoteEnquiryMade",
          "quoteSaved",
          "quoteReferenceAssigned",
          "quoteVersionCreated",
          "quoteImported",
          "quoteDiscarded",
          "quoteWorkflowStepChanged",
          "quoteStateChanged",
          "quoteBound",
          "quoteRolledBack",
          "quoteCustomerAssociationInvitationCreated",
          "quoteExpiryTimestampSet",
          "formDataPatched",
          "quoteFileAttached",
          "quoteOrganisationAssociationUpdated",
          "policyIssued",
          "policyAdjusted",
          "policyRenewed",
          "policyCancelled",
          "policyImported",
          "policyFormDataUpdated",
          "policyStateChanged",
          "claimCreated",
          "claimActualised",
          "claimAmountUpdated",
          "claimStatusUpdated",
          "claimStateChanged",
          "claimNumberUpdated",
          "claimFormDataUpdated",
          "claimCalculationResultCreated",
          "claimVersionCreated",
          "claimVersionFileAttached",
          "claimImported",
          "claimUpdateImported",
          "claimDescriptionUpdated",
          "claimIncidentDateUpdated",
          "claimWorkflowStepChanged",
          "claimEnquiryMade",
          "claimPolicyAssociationCreated",
          "claimOrganisationAssociationUpdated",
          "documentAttachedToQuote",
          "documentAttachedToQuoteVersion",
          "documentAttachedToPolicy",
          "paymentMade",
          "paymentFailed",
          "fundingProposalCreated",
          "fundingProposalCreationFailed",
          "fundingProposalAccepted",
          "fundingProposalAcceptanceFailed",
          "invoiceIssued",
          "creditNoteIssued",
          "portalCreated",
          "portalUpdated",
          "portalDisabled",
          "portalEnabled",
          "portalDeleted",
          "userAccountActivationInvitationCreated",
          "userAccountActivated",
          "userCreated",
          "userDisabled",
          "userEdited",
          "userEmailAddressBlocked",
          "userEnabled",
          "userLoggedOut",
          "userLoginAttemptFailed",
          "userLoginAttemptSucceeded",
          "userModified",
          "userOrganisationAssociationUpdated",
          "userPasswordResetRequestMade",
          "userPasswordUpdated",
          "userRoleAdded",
          "userRoleAssigned",
          "userRoleRetracted",
          "userSessionInvalidated",
          "customerAgentAssigned",
          "customerAgentUnassigned",
          "customerCreated",
          "customerEdited",
          "customerExpiredQuoteOpened",
          "customerDeleted",
          "customerModified",
          "customerUndeleted",
          "organisationCreated",
          "organisationUpdated",
          "organisationDisabled",
          "organisationEnabled",
          "organisationDeleted",
          "organisationModified",
          "tenantModified",
          "tenantDisabled",
          "custom"
        ]
      },
        "entityType": {
            "$id": "#entityType",
            "type": "string",
            "description": "The entity type of an entity.",
            "enum": [ "tenant", "organisation", "product", "user", "customer", "quote", "quoteVersion", "policy", "policyTransaction", "claim", "claimVersion", "message", "document", "event", "invoice", "bill", "creditNote", "debitNote", "creditPayment", "debitPayment" ]
        },

      "entityType": {
        "$id": "#entityType",
        "type": "string",
        "description": "The entity type of an entity.",
        "enum": [ "tenant", "organisation", "product", "user", "customer", "quote", "quoteVersion", "policy", "policyTransaction", "claim", "claimVersion", "message", "document", "event", "invoice", "bill", "creditNote", "debitNote", "creditPayment", "debitPayment" ]
      },

      "kebabCaseAlias": {
          "$id": "#kebabCaseAlias",
          "type": "string",
          "pattern": "^[a-z](?:-?[a-z0-9]+)*$",
          "description": "An alias used for an entity that requies an alias with kebab case formatting."
      },

      "camelCaseAlias": {
          "$id": "#camelCaseAlias",
          "type": "string",
          "pattern": "^[a-z]+[A-Z][a-zA-Z]*$",
          "description": "An alias used for an entity that requies an alias with camel case formatting."
      }

    }
}